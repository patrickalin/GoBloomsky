// Code generated by go-bindata.
// sources:
// tmpl/bloomsky/body.html
// tmpl/bloomsky/menu.html
// tmpl/bloomsky/script.html
// tmpl/bloomsky.txt
// tmpl/endScript.html
// tmpl/header.html
// tmpl/history/body.html
// tmpl/history/menu.html
// tmpl/history/script.html
// tmpl/index.html
// tmpl/log/body.html
// tmpl/log/menu.html
// tmpl/log/script.html
// tmpl/parameter/body.html
// tmpl/parameter/menu.html
// tmpl/parameter/script.html
// lang/en-us.all.json
// lang/fr.all.json
// test/configForTest.yaml
// test/wrongConfigForTest.yaml
// DO NOT EDIT!

package assembly

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _tmplBloomskyBodyHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x99\xcf\x73\xea\x36\x10\xc7\xef\xf9\x2b\xb6\x9a\x69\x6f\x8e\x09\xf0\x7a\xa9\xe1\xd0\x66\xfa\xfa\x66\x3a\x6d\xe7\x35\x7d\x9d\x1e\x85\xb5\xd8\x3b\xb1\x7e\x54\x92\xa1\x94\xe1\x7f\xef\x58\x60\x70\x1c\x42\x86\x60\xf2\xab\x97\x0c\x68\xa5\xef\x6a\x3f\xbb\xc8\xd6\x66\xb9\x14\x38\x25\x85\xc0\x26\x5a\x2c\xd8\x6a\x05\xcb\x25\x78\x94\xa6\xe0\x1e\x81\x49\x54\x25\x5b\xad\x2e\x12\x41\x33\x48\x0b\xee\xdc\x88\xa5\x5a\x79\x4e\x0a\x2d\x1b\x5f\x00\x00\x34\x6d\x56\xcf\x37\xa3\x6d\x4b\xaa\x8b\x48\x8a\x68\xd0\x30\x87\x29\x24\x33\x70\x36\x1d\xb1\xd8\x79\xee\x29\x8d\x27\x85\xd6\xd2\xdd\x2e\x2e\x8d\xca\x18\xcc\x49\xf8\x7c\xf4\x6d\xef\xeb\xd6\x32\x53\xeb\x16\xc8\x05\x1b\x2f\x97\x37\xc0\xbe\xdf\xac\x84\xb4\x20\x54\x1e\x48\xc1\x47\xcd\x56\xab\x24\x36\xad\xd5\xd5\xbe\x48\x8c\x98\x27\x89\xce\x73\x69\xd8\x38\x89\x05\xcd\x1e\xda\x1b\x03\x5e\xf8\xd1\xce\x01\xc9\x8c\x05\x81\xb0\x59\x92\x59\x8f\x41\x8e\x94\xe5\x7e\xc4\xfa\xbd\x5e\xbd\xed\xf0\xb9\x81\xe3\xae\x8b\xe4\xab\x28\x8a\x2f\xab\xad\x48\x31\x80\x28\x1a\x5f\x1c\x02\xf7\x81\x35\xec\x61\xce\xc4\xb6\x47\xea\xb0\x74\xe9\x4d\xe9\xd9\xb8\xf6\x78\x77\x96\xe7\x93\x02\x6b\xf5\xf5\x97\xf0\x37\x72\xde\x92\x41\xd1\xca\xd0\x7a\x8d\xbd\x3f\xb8\x36\x88\x71\xe2\x0c\x57\xb5\x5e\x56\x2c\x4c\x4e\xa9\x56\xb0\xfd\x14\x49\x6e\x22\xc9\xed\x6d\x55\x31\x49\x5c\xcd\x1e\x43\x48\xd8\x0f\xe4\x17\x21\x3f\x5e\x3c\x2c\xbf\xd7\x70\x27\xdc\xb4\x92\xd9\x97\xc0\x1d\xf8\x27\x39\xf8\x46\x4d\x9c\xf9\xee\x08\xc5\x24\xde\xc7\xe9\x20\xbc\xc7\xa3\x53\x55\x59\xbd\x8a\xf0\xba\x57\x7c\x02\xb0\x84\xea\x52\x9b\x13\xcc\x29\x72\xa5\x72\x18\xf8\xd0\xa6\xaa\x3e\x29\x81\xff\xc0\x1f\x5f\xaa\xc3\xec\xd4\xd2\x2a\x67\xaf\x82\x7c\x17\x9c\x24\x2f\x8a\x28\xb5\x7c\xea\x23\x2e\x66\xe4\xb4\x5d\x34\xa9\xfd\x49\x4a\xc0\x35\x59\x4c\x3d\x69\xd5\xc1\xaf\x72\x4e\x4a\x08\xb2\xff\x2b\x7e\x1f\x4b\xe7\x3b\x42\x97\x55\x52\x67\x60\xd7\x74\x52\xf9\x90\xee\xa0\x97\x7d\x4b\x6e\x65\xfe\x84\x9d\x3d\x43\x0e\x7e\x2f\x5d\x78\x33\x11\x50\x65\xa3\x83\x44\xb8\xd2\xf9\x2a\x19\x67\x4d\x44\xed\xe4\x98\x4c\xd4\x6b\x5e\x2c\x15\x96\x93\x12\x56\x9b\x26\xfe\xcf\x9c\xba\x38\x38\x2a\xe9\xf7\x72\x6a\x3c\x84\x09\xae\x39\x15\x5d\xbc\xfb\x04\x07\x41\xeb\x9c\x25\xba\xf5\x22\xe5\xeb\x2a\x37\xf8\x5c\x5d\x53\x7e\xe6\xce\x43\xae\x4b\xdb\x11\x50\xcb\x3d\x9e\x9d\x67\xe5\xe4\xa5\x70\xfa\x1c\xad\xd4\x12\xfd\xfa\x95\xbc\x26\x7a\x83\xd2\xa0\xe5\xbe\xb4\xd8\x01\xc9\xea\x16\x39\x3d\x2b\xc6\xca\x43\xfa\x32\x04\xf3\x52\x92\xd8\xdc\x3b\x6a\x7c\x3f\xd5\x63\xa7\xb3\x6b\xca\xbf\x87\x73\x70\xc2\xed\xfd\x72\xfb\xcd\xa2\x73\xdd\xd4\x9a\xd9\x48\x91\xca\xb3\xb3\x96\x5c\xed\x28\x37\xfc\x99\x0a\xef\xb1\xdb\x35\xfe\x5d\xf2\x82\xfe\x6d\x5e\xae\xbf\xe8\xc2\xf3\x0c\x4f\x8d\x75\xb6\x96\x79\xb3\x35\xf8\x18\xb9\xac\xd0\x13\x6c\xb5\x24\x7e\x29\xe5\x04\x2d\xfc\x3a\x85\x1f\x75\x51\xe8\x39\x5a\xd7\x41\x79\x4e\xb7\x5a\xef\x94\x65\x83\x6a\xaa\xb3\x16\xd3\x6b\x9c\x51\x8a\xf0\xa9\x8b\x37\x72\x11\xb4\x5e\x29\xc6\x24\x0e\x8d\xb4\x7d\x8d\xba\xbd\xc1\x58\x9c\x5a\x74\xb9\x27\xb9\x8b\xa8\xd1\x04\x3c\xa5\x5d\x38\x6c\xf7\x59\x3b\xed\xfa\xb5\x23\xba\x17\xd9\x54\x5b\xc9\xbd\x47\x71\x43\x12\x3f\x1c\x4e\xd7\x8c\x04\xea\xf5\x81\x43\x62\xd7\x3b\x1d\xf4\x9b\x4d\xd5\x61\x8f\x41\xaa\x95\xb7\xba\x70\x50\x68\x1d\x3a\xba\x89\xd3\xa5\x4d\xb1\xee\xd1\x6e\x1b\xb2\x6b\x1d\xbf\x30\x18\x34\x51\xc7\xd2\x0c\xd9\xf8\x2f\x5d\x5a\x98\x58\x3d\x77\x68\x41\x68\x74\xa0\xb4\x07\x57\x1a\xa3\xad\x07\x9f\x23\xac\xb7\xe2\x79\x76\x79\x91\xc4\xe1\xcb\xe9\xbf\x9e\xe3\x58\x0d\x8f\x60\x75\xd5\x11\xab\xab\x37\xca\x6a\x70\x04\xab\x7e\x47\xac\xfa\x6f\x94\x55\xff\x08\x56\x83\x8e\x58\x0d\xde\x28\xab\xab\x23\x58\x0d\x3b\x62\x35\x7c\x46\x56\xbb\xc7\xd4\xa1\x67\x0d\xdc\x7d\xd8\xb4\x66\x6d\x66\x58\x3d\x0f\xd6\x8d\x65\x33\xba\xfd\x0f\x61\xb0\x2d\x97\x80\x4a\xc0\x6a\xf5\x5f\x00\x00\x00\xff\xff\x25\xb6\x33\xcb\x6c\x1c\x00\x00")

func tmplBloomskyBodyHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplBloomskyBodyHtml,
		"tmpl/bloomsky/body.html",
	)
}

func tmplBloomskyBodyHtml() (*asset, error) {
	bytes, err := tmplBloomskyBodyHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/bloomsky/body.html", size: 7276, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplBloomskyMenuHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x53\x3d\x8f\x9c\x30\x10\xed\xf7\x57\x58\x73\x35\xe7\x3e\x02\x8a\x28\x52\x52\xa4\x48\x71\x7d\x34\xe0\x59\x18\xad\x19\x23\xdb\xa0\x5b\x21\xfe\x7b\xc4\x87\x77\xf7\xc8\x29\xb9\x34\xa9\xb0\xc7\xef\xcd\x7b\xf6\x3c\xa6\xc9\xd0\x99\x85\x14\x74\x24\x03\xcc\xf3\x29\x17\x1c\x55\x6d\x31\x84\x02\x04\xc7\x0a\xbd\xda\x3e\x19\xcb\x48\x3e\x50\xda\x9e\xf9\x95\x4c\x16\x5d\x0f\xe5\x49\x29\xa5\x72\xc3\x37\x62\xed\x24\x22\x0b\xf9\xfd\xec\x78\xbe\xb7\x68\x09\xcd\x1b\xcc\x8a\xab\x86\x18\x9d\xa8\x78\xed\xa9\x80\x6d\x03\x07\x62\x74\x4d\x63\x49\xd5\xce\x5a\xec\x03\x19\x50\x06\x23\xee\xe5\x45\x7e\xab\xa7\x32\xfa\x86\x62\x01\x4f\x1b\x1b\x14\x7a\xc6\x8c\x5e\x7b\x14\x43\xa6\x80\x33\xda\x05\xbb\x56\x17\xe7\xde\xd9\x9b\xd4\xd1\x5c\xe8\x51\x92\x99\xe0\x33\x27\xf6\x0a\xe5\xcb\x66\x47\x70\xe4\x06\x23\x3b\xc9\xf5\x82\xfb\x03\x95\x6b\x27\xd9\xda\xfe\x7f\x41\x73\xbd\x3d\xe5\x81\x8e\x87\x97\xad\x3c\x8a\x01\xd5\x7a\x3a\x17\xf0\x04\xe5\x67\xeb\x5c\x17\x2e\xd7\x5c\xe3\xc3\x28\xb5\xe1\xf1\x30\x59\x36\xb7\x27\xbb\xa7\x60\x1b\x43\x4a\xcc\x6d\x2c\x07\x0f\x83\x7d\x30\x91\xc0\x82\xe3\x01\xb7\x62\x2d\x27\x2c\xd6\x91\xc7\x63\xaf\x87\x7b\x6d\x57\xd0\x50\x4e\xd3\x8b\x82\x6f\xae\x23\x98\xe7\xe5\x1a\xb9\xb6\xfc\x6e\xe7\xf2\x81\xd6\x72\x88\xce\x5f\x13\x7b\xdf\xfd\xad\xc1\x9d\xdf\xa3\xc7\x8e\xe2\x92\xee\x1f\x69\xf9\x51\xae\x75\x0d\x94\xdf\x5d\xf3\x41\x7c\x1b\x63\x1f\x3e\x69\xdd\x70\x6c\x87\xea\xb9\x76\x9d\xee\x31\x7a\xae\x2f\x68\x59\x74\xb5\x4f\x30\xab\x2d\x93\xc4\xac\x71\xa0\xd2\x1f\xf1\xb3\xb2\x28\x17\x28\xbf\xae\xd4\x7f\xd4\x33\x18\xda\xca\xa1\x37\xcf\x49\x62\xd5\xfe\xbd\x7b\xca\x90\xfa\x92\x18\x77\xa5\xb7\x49\xd0\x83\x7d\x37\x65\xfb\x32\xd7\x82\x63\x79\x9a\x26\x45\x62\xd4\x3c\xff\x0a\x00\x00\xff\xff\x08\x32\x4a\x89\xbe\x04\x00\x00")

func tmplBloomskyMenuHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplBloomskyMenuHtml,
		"tmpl/bloomsky/menu.html",
	)
}

func tmplBloomskyMenuHtml() (*asset, error) {
	bytes, err := tmplBloomskyMenuHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/bloomsky/menu.html", size: 1214, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplBloomskyScriptHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x9a\x5b\x6f\xdb\x3a\x12\xc7\xdf\xf3\x29\x08\xbd\xd8\x69\xea\xbb\x83\xb3\xdb\x5c\xb0\xdd\xc6\x3d\x6d\x91\x38\x41\x9c\xd3\xe0\xa0\xa7\x0f\xb4\x38\xb6\xb8\x95\x48\x81\xa4\xec\x1a\x86\xbf\xfb\x82\x92\x5c\xeb\x2e\xd9\x91\x8b\xe4\xa5\x66\x35\xfc\xcf\x6f\x86\x33\xa4\x6c\x69\xbd\x26\x30\xa3\x0c\x90\x21\x4d\x41\x5d\x65\x6c\x36\x27\x97\xc1\xc7\xeb\x13\x84\x10\x5a\x52\x46\xf8\xb2\x8d\x09\x19\x2d\x80\xa9\x5b\x2a\x15\x30\x10\x4d\xc3\xe6\x98\x18\x6f\xd1\xcc\x63\xa6\xa2\x9c\x35\x61\xa1\x4e\xd1\xda\x9f\xa3\xff\x16\x58\x20\xee\x29\xd7\x53\xe8\x0a\x11\x6e\x7a\x0e\x30\xd5\x9e\x83\x1a\xd9\xa0\x3f\xfe\x77\xf5\x99\x34\x8d\xc0\xc2\x38\xbd\x88\xcd\x5b\xca\xf8\xd8\x15\x94\x69\x99\x5f\xbe\x1c\x90\x12\xcf\x21\xea\x6f\x6b\x4b\xa2\xee\x4c\x01\x58\x41\xe8\xb1\x69\x10\xba\x88\xba\xd2\x7f\xa4\x4d\x19\x03\xf1\xe9\xe9\xee\x16\x5d\xa1\x50\x37\x6e\x12\x30\xb6\xb1\xeb\x02\x23\x1f\x2c\x6a\x93\x26\x89\xa8\x6c\x76\x1f\x25\x37\x7f\x80\x06\x65\xb0\x44\xcf\x30\x9d\xf8\xe3\xa6\xb1\x5e\xb7\x9f\x61\xea\x5f\x15\x9e\xb0\x37\x9b\x28\x45\xa7\x73\x3f\x46\xf7\x0f\xa3\x71\x42\xa6\xcd\x19\x77\x81\x45\xc3\x4e\xa4\x78\xa7\x10\x64\xa8\x69\x68\x99\x64\x84\x81\x45\x60\x10\x2a\xbb\x82\x2b\x6e\x72\xfb\xb4\xcc\x50\x00\x26\xab\x89\xc2\x0a\x4a\x4d\x3d\x91\x21\x17\x5e\x93\xc0\xf4\x5a\xbb\xc0\x8c\xb8\xcd\xe6\x24\x11\xc7\xfd\x18\x8d\x1e\x1f\xef\x1f\xd3\xb9\x00\x21\xb8\x88\x25\x43\xff\x47\x32\x1d\x26\x67\x92\xdb\xd0\xf6\x2f\x86\x26\xf1\x74\x04\xd0\xc9\x2b\xa9\x45\x6c\x73\x66\xda\x5c\x42\x49\xfa\xc3\xbc\x5f\x4e\xaf\x3f\x70\xc6\xc0\xb7\x43\xfe\x44\xd2\xbe\xec\x4c\xaf\x8d\x6c\x1f\x41\xa4\x77\xa3\xc9\xe4\xfd\x9f\xa3\xb4\xe7\xb0\x0c\x4b\x7c\xeb\x6a\x37\x3d\x21\x80\x29\x82\x15\x84\x65\x77\x83\x15\x34\x13\x31\xfb\x7d\x81\x15\x28\xea\x68\xb3\xc6\x7a\xfd\x84\x8c\x5b\x2c\x15\x9a\xac\x98\x69\x6c\x36\xef\x50\x03\x9d\x45\xc5\x74\xa3\x06\x4a\xe8\x0c\x19\x1d\x03\x9d\xa5\xd6\xb6\x99\x30\xbf\xe3\x4c\x59\xbe\x7d\x2f\x7f\x52\x62\xce\x47\xcf\xb6\xff\x06\x2c\x02\x37\xe8\x3f\xa8\xc2\x9c\x4f\xdc\x13\x32\x98\xf0\xae\x82\xf9\x1d\x65\x9e\x82\x3d\x26\x4c\xc0\xe4\x8c\xc8\x64\x0e\x73\xb7\x30\x01\x33\x01\xd2\xd2\xb9\x35\x4e\x63\xbb\xc9\x36\xe5\x17\x27\x89\x32\x7f\xe2\x48\x5a\x7c\x89\x94\x05\xda\x08\xa3\xc4\xf5\xb0\xaa\xc2\xfa\x48\x36\x74\xa7\xb3\xad\x72\x9b\xcf\x75\x61\xb4\xb5\xc6\x69\xdc\x89\x54\xba\x59\xb6\x17\xdb\xd2\xb5\xa9\x6a\x1a\x93\xd1\xc3\xfb\xc7\xf7\x4f\xf7\x8f\x5a\x33\x55\x22\xff\x93\x5c\x6f\x37\x5f\x26\xf7\xe3\xb6\x8b\x85\x84\xa6\x54\xe2\x5b\xf7\x7b\xd2\xb6\xd3\x41\x53\x8f\xda\xc4\x0f\x30\xa5\x82\xa3\x85\xa8\x25\xdb\x37\x9a\xe0\x69\x82\xde\xa0\x5e\xb7\xdb\xcd\xa8\x4d\x47\x97\x8e\x44\x57\xe8\x5b\x50\x9a\x5f\x30\x33\x36\x9b\xc6\xdb\xb0\x52\x3f\xc2\x34\x3a\xbc\xc3\x22\x3a\x7c\xef\x8a\xf8\xd5\x55\x74\xf8\xc5\x63\xf1\xa1\x1d\x9b\xeb\xcd\xa3\xc3\x09\xb8\xd1\xe1\xbd\xa9\xa2\xc3\x31\x5f\x44\x87\x37\xa0\x3b\xa7\xf1\x3d\x1d\xce\x0a\xb0\x4e\x3e\x8e\x57\x78\x4e\xd8\xfa\xd4\xf1\xc3\xff\x86\x23\x5d\x94\xa1\x1a\xf6\x38\xde\xb5\x66\xda\xc6\xe2\xde\x2f\xcf\x61\x9f\x64\xb8\xa5\x6c\x6b\xf3\xab\x39\xd2\x56\x12\xcc\xad\x55\x4e\x47\x68\xab\x19\x17\x0e\x56\x0a\xc8\x13\x75\xa0\x1b\xd6\x3c\x3a\x43\x0d\x7f\x43\x09\x02\xdc\x8e\xfc\xb4\x6c\x07\x3e\xe9\x19\x6a\xbc\xf3\xed\x28\xfb\xf5\x59\x82\x59\xe2\xa6\xb7\x75\xd3\x42\xbd\x02\x57\x15\xdb\x37\x2e\x9d\xe8\xe0\xf8\xc5\x12\xae\xfe\x8e\xab\x5f\x33\x57\xbf\x88\xab\x5f\xc2\x35\xd8\x71\x0d\x6a\xe6\x1a\x14\x71\x0d\x4a\xb8\x86\x3b\xae\x61\xcd\x5c\xc3\x22\xae\x61\x09\xd7\xf9\x8e\xeb\xbc\x66\xae\xf3\x22\xae\xf3\xc4\x36\x9b\x2b\xa9\xcf\x14\xa9\xb0\xe3\x16\xa9\x75\xab\xaa\x99\x54\xad\x12\x42\xfe\xae\xfd\x81\xaa\xd5\x18\x3b\x50\x31\x4e\x02\x0b\x6a\x26\x4f\xc0\x60\xfb\xf7\xaf\x7c\xbe\xa9\x9c\x30\xdb\xe6\x4b\x10\x32\x4b\x6b\xec\x39\xf7\xb3\x8f\x5b\x0b\x7f\x3d\xfc\xcd\x78\x37\x69\xb3\x69\x24\x22\xa7\x33\x14\x39\x87\xc6\x74\x6e\x65\xde\x45\xe7\x02\x31\x3d\x23\x01\xd3\xb8\xa4\xc8\xb4\xb1\x94\x57\xff\x18\x4b\x8a\x96\xb4\xe5\x70\xce\x5a\x4b\xcc\x28\x9b\xb7\x4c\x01\xd2\x04\xa6\x5a\x83\x7f\x8c\xeb\xcb\x0e\xbd\x0e\x20\x7d\xd7\x1a\x30\x7e\x0f\x8c\xc0\x96\x50\x3f\x10\xc1\xab\x96\xf4\x18\x5b\xc5\x18\x6e\x82\xe3\x31\x4e\x70\x91\x9d\xaf\x89\xe2\xc2\x69\xff\xf5\xf5\x33\x23\xf0\x13\x5d\x5e\xa1\xfe\x5e\x79\xf3\x16\x59\x2b\x18\x17\x3d\x43\x8d\x4e\xaf\x17\xa0\xd9\x7c\xa9\xd1\xfc\x3b\xc1\x54\x34\xa6\xcd\x3d\xb2\x0d\xc5\xc8\x48\x60\xc5\x10\x86\x47\x0d\xc1\x01\x42\x3d\x27\x3f\x0a\xbd\x26\xa5\x91\x1c\x13\xd0\xa2\x73\xab\x18\x2f\x5a\x32\x46\xb2\x4c\x8a\x92\xfc\x4c\x19\xb9\xa1\x22\xfc\x0e\x74\x75\x85\x8c\xb1\xb1\x57\xb2\x97\x94\x11\x42\x45\xb2\xb0\xc3\x7b\x2f\xa1\x34\x38\x4a\x43\xeb\x69\x48\xf1\x25\x16\x44\xb6\xba\x2d\x02\xf3\x90\x3e\xab\xcd\xf6\x0c\x60\x74\x84\x08\xfc\xd1\x48\xea\x8d\xa0\x24\x98\xe1\x79\xad\xd1\xd4\x18\x4c\x25\xfc\x7f\xd7\xbb\x18\x93\x1a\xf9\x27\xdc\x4b\x2d\x46\x71\x30\xbd\x41\xbd\x8b\x31\x39\x42\x30\x25\x11\xfc\xab\xe6\xf5\x78\x3e\xd6\x7a\x3c\x43\x95\xf2\xea\xf7\xeb\x5d\x91\x1a\xc3\xa9\x18\xc0\x1f\x35\xef\x56\x35\x46\x10\xdf\xad\xaa\xc5\x33\xe8\x15\x2c\x48\xf1\xd9\x31\xf1\xa4\xc2\x94\x01\xd1\x51\x4d\x5c\x00\xa2\xcf\xea\xde\x5e\xe1\x48\x4f\x2a\xcd\x93\x7f\x20\x66\x78\xd1\xc7\xa0\xe3\x76\x2c\x23\xfb\x40\xd4\x7a\xad\x29\x60\x6f\xc6\x85\x6a\x75\x33\x8f\xc5\xd2\x1c\xcf\x3d\x99\xbc\x5b\x4b\xac\xe3\x9f\x9e\x54\x07\xa2\xa4\x7f\xeb\x2d\x62\xd1\x28\x4e\xe6\x8d\x75\x1c\xc6\x91\x01\x4e\x47\x1e\x9b\xe6\x87\x63\x95\xe3\xfc\x70\x2c\x1f\xe3\x87\x73\xc4\xf4\x6c\xeb\xa7\x28\x3f\xe9\x0a\xfa\x0d\x99\xda\x82\x15\xa6\x2a\x4d\x56\x57\xd2\xca\xb7\xa2\xec\xee\x1d\xbc\xb2\xee\xed\x1d\x56\xa4\x47\x69\xdf\x03\x59\x8e\xd4\xbe\x2f\xa0\x39\x4e\xfb\x1e\x02\xf4\x5b\xda\xf7\x25\x60\xc7\x6e\xdf\x1c\xb6\x43\xdb\xf7\x8f\x57\xd6\xbe\xfd\xd7\x73\xf8\xf6\x5f\x55\xf7\xbe\x80\xe6\x38\xdd\x7b\x08\xd0\x6f\xe9\xde\x97\x80\x1d\xbb\x7b\x73\xd8\xf4\x7d\x73\x51\xef\x3e\x62\xea\xdf\xfc\x77\xf7\xea\x56\x81\x29\xcb\xb9\xed\xcf\xbc\xcd\x4f\xfe\x2e\xf4\xd2\x1f\x30\x73\xfd\xff\x0d\x32\x13\xc0\x73\xa6\x02\x6c\x1b\xff\xcc\xfb\x72\x51\x92\xa2\x1b\x4c\xed\xd5\x61\x79\x22\x7a\x6a\x02\xd6\x68\xbd\xf4\x77\xbb\x3c\xe5\x4c\x6e\x5d\x3e\x94\xa5\x7e\x8c\xab\x12\xb3\xe3\xbc\x20\x6a\xc7\x39\x5e\xdc\x29\xed\x1c\x7a\xbf\xbf\x1d\x74\x39\x15\xd7\xba\x8f\x0a\xac\xec\x8e\xd3\xdf\x37\x47\x8f\xfe\x33\xd5\x43\x12\x24\xb0\x4a\x3e\xec\xa8\x27\x3b\x19\xc2\x59\xd0\x87\xd5\x84\x9e\x7a\x68\x49\x08\x7f\xee\xd1\x62\x2e\x2b\x88\x10\xbd\xb8\x1e\x22\x46\x99\xe5\x50\xf1\xf9\x1a\x38\xee\x2c\xf3\x49\x96\xff\x22\x03\x38\x2e\x08\xac\x3c\x01\xd9\x1b\xfb\x0c\x5b\x02\x98\x05\x54\x65\xef\xe9\x85\x7e\xcd\x2a\x7e\x3f\xe4\x3c\x23\x01\x5b\x52\x4f\xee\xbc\x56\x73\x6b\x79\x0e\x25\x39\x0f\x01\x7d\xcf\x9f\x42\x83\x6c\xaf\xdb\xe9\xfb\xba\x75\x05\x48\xe9\x09\xa0\xcc\x9a\xe7\xba\x7e\x08\x8d\xc2\x7a\xff\x34\xaf\x9a\xcb\xad\xba\xe5\xe2\x52\x71\xcb\xc5\xbe\xbe\xf5\x80\x2b\xd3\x2f\xb8\xad\xf0\x3c\xfb\x79\xa7\xd6\xfe\x1a\x5c\x0f\xea\xf5\x6b\x65\xd9\xa9\xcd\xb9\x43\x9d\x79\xd7\x38\x6d\x4b\x61\xc6\x24\x3f\x3b\x78\x0e\x7f\x3d\xde\xb6\x05\xb8\x36\x36\xa1\x69\x58\x4a\xb9\xc6\x5b\xff\x1f\x99\x7a\xa3\xa7\xf3\xa6\xdc\x4d\x2f\xee\xe6\x41\xc0\x82\xc2\xd2\x77\x74\x4b\xa5\xfa\xd6\x4d\xbc\x87\x52\xae\xd8\x2f\x51\xec\xed\xad\x38\x28\x51\xec\xef\xad\x38\x2c\x51\x1c\xec\xad\x78\x5e\xa2\x38\xfc\x7e\xf1\xa6\xb3\x4f\x09\x2c\x28\x49\x94\xc0\x57\x4a\x80\x87\x8b\x92\x5f\x01\xd5\x6a\x37\x10\xb7\x39\x26\x95\xdf\x72\xdb\x52\xf5\xf2\xa8\x7a\x35\x50\xf5\x0e\xa5\xea\xe7\x51\xf5\x6b\xa0\xea\x1f\x4a\x35\xc8\xa3\x1a\xd4\x40\x35\x38\x94\x6a\x98\x47\x35\xac\x81\x6a\x98\x41\x15\xbc\xe4\xbb\x39\xbd\x38\xb9\xec\x6c\xdf\x2c\x5f\xaf\x11\x30\x82\x36\x9b\xff\x07\x00\x00\xff\xff\xe8\x77\xd3\xed\x80\x2e\x00\x00")

func tmplBloomskyScriptHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplBloomskyScriptHtml,
		"tmpl/bloomsky/script.html",
	)
}

func tmplBloomskyScriptHtml() (*asset, error) {
	bytes, err := tmplBloomskyScriptHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/bloomsky/script.html", size: 11904, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplBloomskyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x4f\xae\x9b\x30\x10\xc6\xd7\x2f\xa7\x18\x45\xea\xb2\x3d\x40\x97\x05\xf1\x40\x6a\x5e\xa2\xfc\xeb\xda\x09\x13\xb0\x8a\x0d\xb2\x4d\xdb\x08\xcd\x9d\x7a\x86\x9e\xac\x32\xc6\x04\x17\x9a\x4a\x65\xf9\xfd\x7e\xdf\xcc\x08\xc9\xab\xf7\x4b\xdf\xea\x53\x55\xd7\x42\x7f\xbd\x43\xd7\x7d\x78\x45\xf3\x99\x69\x13\xb1\xaa\x22\xfa\x8b\xdf\x75\x47\x58\x1f\xb9\x40\x6d\x98\x68\xe0\x32\xd4\xd7\x44\xf0\xf1\xe5\xc5\x0d\xb1\xf8\x60\x31\x91\xf3\x23\x6e\xbc\xe1\x1d\x1b\x79\x1c\xe3\x37\x7e\x45\xc8\x72\xef\x38\xc5\xc5\x59\xec\xb5\xb7\x56\x5c\x50\xc1\xf6\x06\x49\x5d\x55\xf5\x77\x54\x3a\x58\xfb\xd6\x8a\xed\x6d\x44\xbe\x95\xc9\x1c\x7f\xc0\xe9\x1c\xce\xee\xd3\xd3\x79\x1c\xcd\x8b\xd2\x4c\x2f\xcc\x74\x1f\x79\xfe\x85\xcb\x1c\x62\xae\xf0\x6a\x78\x2d\x83\xad\x16\x8d\x64\xd9\x87\x18\x0b\x85\x38\x5c\xbb\x50\x8b\xb1\x08\x9a\xaf\xad\x36\xe1\xbd\x36\xb6\xe9\xa6\x29\x89\x60\xd3\x94\xce\x3e\xb4\xda\x30\x2e\x31\x07\x2b\x04\x77\x8d\xc8\x92\x43\x83\x98\xff\xd1\xfd\xd7\x26\x6d\x65\xfd\x3f\x7b\xa6\xcd\x3d\xe3\x32\xfc\xb1\x36\x21\x82\x07\x86\x98\xf1\xea\x1e\x5e\x61\xf3\x3e\xce\xac\xcb\xe5\xf2\xb0\x41\x9c\x39\xb0\x67\x06\xe7\x03\x6d\x3a\x77\x9f\x6d\xdf\x08\x22\x10\xe2\xe9\xf6\x99\xf3\x64\x7b\xe0\x1e\x51\x34\xa8\x98\x69\x55\x6f\x27\xeb\xc9\x0b\x7a\xa0\x84\x95\x0a\x65\x89\xdc\x10\xc1\xaf\x9f\xc9\x62\x37\x9a\xec\x9a\xa0\x08\x2b\xcd\x5b\xdd\x17\x23\x57\x4c\x5b\xc1\xf3\xc9\x73\x74\x1d\x9f\x12\xc1\x3b\xe7\xed\x14\x6a\x3d\x4c\xcf\x64\x5a\x4c\x64\x8f\x6c\x3c\xd0\x79\x27\xdd\xb1\x85\x4a\xba\x63\x8e\xad\x7e\x07\x00\x00\xff\xff\xf2\x4f\x9d\x31\x8f\x04\x00\x00")

func tmplBloomskyTxtBytes() ([]byte, error) {
	return bindataRead(
		_tmplBloomskyTxt,
		"tmpl/bloomsky.txt",
	)
}

func tmplBloomskyTxt() (*asset, error) {
	bytes, err := tmplBloomskyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/bloomsky.txt", size: 1167, mode: os.FileMode(420), modTime: time.Unix(1560451844, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplEndscriptHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x8e\xb1\x4a\x06\x31\x0c\xc7\xf7\x3e\x45\xec\xde\x16\x75\xfd\x7a\x83\xa3\x93\xe0\x13\x84\x36\xa7\x3d\xee\xda\xb3\xc9\x09\x52\xfa\xee\x42\xbb\xea\xf4\x05\x02\x49\xf8\x91\xff\x0f\x5a\x8b\xb4\xa6\x4c\xa0\x29\xc7\xf7\x50\xd3\x29\xba\x77\x75\x7b\x30\x06\x5e\x4a\x11\x96\x8a\x27\x84\x52\x09\x5e\xf1\x1b\x27\xa1\xe0\x8f\xf2\xde\xff\x77\xbf\xa3\xc1\x98\x65\xda\xbc\xed\x18\x28\x02\x0a\xc8\x27\x01\xe5\x08\x65\x1d\x63\x2c\xe1\x3a\x28\x0b\x70\x19\xfb\x89\x1f\xc4\xb0\x17\x8c\xb0\x22\x0b\xd5\xf9\x83\x87\x3a\x70\x0d\x5e\x3b\x16\x94\x14\xdc\xc6\x6e\xfb\xba\xa8\xfe\x98\x67\xfb\x64\x1f\xed\x91\xb2\xdd\x58\x2f\xea\xe6\x26\xbe\xa8\xd6\x46\x56\xef\xbf\x01\x00\x00\xff\xff\x78\xdd\xc8\x41\x2b\x01\x00\x00")

func tmplEndscriptHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplEndscriptHtml,
		"tmpl/endScript.html",
	)
}

func tmplEndscriptHtml() (*asset, error) {
	bytes, err := tmplEndscriptHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/endScript.html", size: 299, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplHeaderHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xdf\x6f\xdb\x36\x10\xc7\xdf\xfd\x57\x5c\xf5\x32\x20\x18\xa5\xa6\x69\xb0\xce\xb5\x8c\x75\x45\xd0\x65\xe8\xfa\xd0\x74\xd8\x80\xa2\x0f\x34\x79\xb2\x2e\xe1\x0f\x95\x77\xb6\x63\x18\xfe\xdf\x07\x4a\x4e\xaa\xb4\xc8\x66\x0c\x1b\x1f\x08\x9d\x78\xdf\x0f\xef\x78\x87\xdb\xed\x2c\x36\x14\x10\x8a\x16\xb5\xc5\x54\xec\xf7\x93\x99\x47\xd1\x60\x5a\x9d\x18\xa5\x2e\x56\xd2\xa8\x17\xc5\xfc\xf0\xbb\x15\xe9\x14\x7e\x5e\xd1\xba\x2e\xfe\x54\xbf\xbf\x52\xaf\xa3\xef\xb4\xd0\xc2\x61\x01\x26\x06\xc1\x20\x75\x71\x79\x51\xa3\x5d\xe2\xbd\x2a\x68\x8f\x75\xb1\x26\xdc\x74\x31\xc9\xc8\x71\x43\x56\xda\xda\xe2\x9a\x0c\xaa\xde\xf8\x1e\x28\x90\x90\x76\x8a\x8d\x76\x58\x9f\x66\xc8\x13\xa5\xe0\x43\x8b\xa0\x17\x71\x8d\x70\x06\x3d\x54\xf4\x92\xe1\xc4\xaf\x58\x4e\xc0\x44\x8f\xd0\x50\x62\x01\x0a\x20\x2d\x42\xce\xe7\x25\xe8\xb0\x85\x28\x2d\xa6\xde\xbe\xbb\x17\xb2\x68\xd0\x9c\xe8\x46\x30\x9d\x64\x09\xe3\x80\x54\xea\x61\xd8\x16\xd9\x24\xea\x84\x62\x18\x45\xfe\xb3\x8b\xd1\xf3\xcd\x16\x8c\xa3\x8c\x5c\xc6\xaf\xb2\xd5\x2b\x69\x63\x1a\x29\x3a\x2d\x89\xcc\x8d\x76\x14\x7e\x5a\x7a\x4d\xae\x34\xd1\x67\x91\x90\x38\x9c\x7f\x0d\x7c\x13\x67\xd5\x70\x32\x19\x1e\xe0\xad\x16\x1c\xc2\xee\xc8\xa1\x05\x1d\x2c\x78\x0a\xd4\x10\x5a\x78\x7d\x75\x35\x04\xee\x28\xdc\x40\x42\x57\x17\x2c\x5b\x87\xdc\x22\x4a\x01\x6d\xc2\xa6\x2e\x2a\x16\x2d\x64\x2a\xc3\x5c\x2d\x62\x14\x96\xa4\xbb\xd2\x53\x28\x0d\x73\x01\x26\x45\xe6\x98\x68\x49\xa1\x2e\x74\x88\x61\xeb\xe3\x8a\x8b\x47\xa0\xf0\xb7\x54\x25\x2d\x7a\xfc\x9f\xd8\xbc\x21\x31\xed\x7f\x0a\xdf\xa0\xce\x6d\xa2\xc8\xc4\xc0\xf7\xe4\x7f\x4d\x50\x1b\x0a\x76\x84\x99\xcc\x86\x1e\x02\x4e\xe6\x8b\xec\x9a\xab\xeb\xcf\x2b\x4c\x5b\x75\x56\x3e\x2b\x4f\x7b\xff\xeb\x47\xf3\x81\x62\x3e\xab\x06\xcc\x51\x2d\xf1\xab\x5e\xeb\xab\xe1\xd6\xbe\x33\x1e\x89\xe0\x61\x23\x5c\x33\x1c\x75\xff\x3f\xd2\xc6\x45\x3a\x16\x3a\x99\xf5\x6f\x3c\x9f\x00\x00\x2c\xa2\xdd\xc2\xae\xff\xcc\xab\xd3\xd6\x52\x58\x2a\x89\xdd\x14\xce\x9f\x76\xb7\x2f\xfb\xa3\x7d\xbf\xf7\x5b\xc9\xa2\x93\x60\x52\x82\xbe\x73\x5a\xf0\x5b\xf5\x14\x9e\x3f\xed\x6e\xe1\xf4\xfc\x4e\x9e\x97\xe0\xad\x28\xed\x68\x19\xa6\x60\x30\x08\xa6\x6f\xd0\xd4\x24\xed\xc7\xbc\x45\x4c\x16\xd3\x14\x42\x0c\x78\xe7\x3d\xab\x0e\xd1\x1f\x8a\xf3\xcb\x87\xdf\xde\x9e\x03\xb7\xe4\xfb\xba\xbc\x47\xee\x62\xb0\xf9\x31\x9a\x98\xe0\xf2\xe2\x05\xf0\xaa\xcb\xf3\x10\x62\x73\x70\x46\x87\x1e\x83\xf0\x50\x48\xb4\xa4\x21\xf7\x07\xe1\x61\x2a\x65\xec\x1f\xaf\xde\xbf\xbb\x7c\xf7\x66\x3a\x06\xda\x88\x1c\xbe\x13\xd8\xc4\x74\x03\xd4\xc0\x36\xae\x20\x4f\xdb\x7e\x12\x76\x7a\x89\xb0\x26\x0d\x0d\x39\x9c\x56\xd5\x3d\xea\x23\x35\xe0\x04\x2e\x2f\xe0\xc7\x4f\xf3\x43\x6a\x0f\xea\x9a\x87\x3d\x4f\xab\x2a\x32\x97\x5e\xdf\x1a\x1b\xf2\xc8\xaa\x5a\xf1\xee\x9c\x5b\x5a\x57\x67\xe5\x0f\xe5\xd9\x17\xfb\xbe\xd8\xa3\x9a\x1e\x8f\x4d\x43\x3e\xd5\x69\xf9\xbc\x7c\x76\x67\x3d\x86\x9c\x3d\xf9\x88\xc1\x52\xf3\x29\x27\xb3\xdb\x01\x06\x0b\xfb\xfd\x5f\x01\x00\x00\xff\xff\x7a\x43\x3a\x98\xcf\x06\x00\x00")

func tmplHeaderHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplHeaderHtml,
		"tmpl/header.html",
	)
}

func tmplHeaderHtml() (*asset, error) {
	bytes, err := tmplHeaderHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/header.html", size: 1743, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplHistoryBodyHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x96\xcf\x6e\xa3\x30\x10\x87\xef\x7e\x8a\x59\xaf\x76\x6f\x2c\xdb\x63\x5b\xe0\x92\x4a\x39\x45\xaa\x5a\xb5\x77\x83\x27\x65\x54\x6c\x90\xff\x24\x41\x88\x77\xaf\x42\x9a\x44\xa4\x51\x2b\x82\x94\x36\x1c\x90\xb0\xcd\xfc\xbe\x4f\x06\xdb\x4d\x23\x71\x4e\x1a\x81\xa7\xa5\xac\x79\xdb\x36\x0d\x38\x54\x55\x21\x1c\x02\x57\xa8\x3d\x6f\x5b\x16\x49\x5a\x40\x56\x08\x6b\x63\x9e\x95\xda\x09\xd2\x68\x78\xc2\x18\x00\x40\xd7\x49\x32\xe6\x06\xe7\x06\x6d\xee\x48\x21\x4f\xa2\x50\xd2\x22\xe9\x06\x6c\x46\x39\x91\x16\x08\x4b\x92\x2e\x8f\xf9\xf5\xff\x3f\xdb\xd7\x37\x9d\x26\xd9\x3d\x6c\x1a\x64\xbf\xa1\x17\xb4\x06\x44\x23\x9c\x37\x38\x99\x0a\xff\x82\x93\x5c\x18\xc7\xc1\xba\xba\xc0\x98\xa7\xa5\x91\x68\x6e\xe0\xaa\x5a\x81\x2d\x0b\x92\xf0\x3b\xcb\xb2\x1e\xd2\xae\x64\x78\x18\x74\x2c\xf9\x68\x70\x17\xf9\x75\xcd\x28\x5c\xbb\x9d\x6a\x5a\x19\xb4\xd6\x1b\x1c\x6c\x79\x58\x11\x4e\xd0\xfe\x88\xd1\x93\xfe\xac\xe4\x38\xeb\xdc\x2b\x92\xe4\xea\x53\xad\x47\xb9\x6e\xc3\xcf\x33\xc1\x4b\xd2\x72\xea\xad\x7b\x55\xf9\xb7\xd8\x6e\xf3\xcf\x63\xeb\x17\x63\x3f\xe4\x51\xb2\xa4\x25\xae\x9e\x9e\x87\xb9\x0e\x53\xfd\xab\x53\x5b\xdd\x8e\x9e\x92\x47\x9f\xda\x6e\x95\x95\x3f\x1c\xd6\x08\xd2\x77\x82\x8a\x7a\xa6\x2e\x80\xf4\x22\x20\x1f\x84\xc3\x99\x1a\xc4\x18\x85\xdd\xee\x9a\x30\xb6\xdf\x70\xf7\xb7\xfe\xc5\x8e\x2d\x76\xf7\x34\xe2\xa7\x64\xec\x1d\x35\xfa\x15\x04\x10\xfe\xdb\x9d\x10\x20\x08\x12\xd6\x34\x80\x5a\x42\xdb\xbe\x05\x00\x00\xff\xff\xa3\xc7\x94\x5a\x6b\x08\x00\x00")

func tmplHistoryBodyHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplHistoryBodyHtml,
		"tmpl/history/body.html",
	)
}

func tmplHistoryBodyHtml() (*asset, error) {
	bytes, err := tmplHistoryBodyHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/history/body.html", size: 2155, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplHistoryMenuHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x53\x3d\xaf\x9c\x30\x10\xec\xef\x57\x58\xfb\x6a\x9e\xfb\x08\x28\xa2\x48\x49\x91\x22\xc5\xeb\xa3\x05\xef\xc1\xea\xcc\x1a\xd9\x06\xbd\x13\xe2\xbf\x47\x7c\xf8\x72\x21\xa7\xe4\xd2\xa4\xc2\x5e\xcf\xec\x8c\x76\x87\x69\x32\x74\x66\x21\x05\x1d\xc9\x00\xf3\x7c\xca\x05\x47\x55\x5b\x0c\xa1\x00\xc1\xb1\x42\xaf\xb6\x4f\xc6\x32\x92\x0f\x94\xae\x67\x7e\x27\x93\x45\xd7\x43\x79\x52\x4a\xa9\xdc\xf0\x8d\x58\x3b\x89\xc8\x42\x7e\x7f\x3b\xbe\xef\x2d\x5a\x42\xf3\x0b\x66\xc5\x55\x43\x8c\x4e\x54\xbc\xf6\x54\xc0\x76\x81\x03\x31\xba\xa6\xb1\xa4\x6a\x67\x2d\xf6\x81\x0c\x28\x83\x11\xf7\xf2\x22\xbf\xd5\x53\x19\x7d\x43\xb1\x80\x97\x8d\x0d\x0a\x3d\x63\x46\xef\x3d\x8a\x21\x53\xc0\x19\xed\x82\x5d\xab\x8b\x73\xef\xec\x4d\xea\x68\x2e\xf4\x28\xc9\x4c\xf0\x99\x13\x7b\x85\xf2\x6d\xb3\x23\x38\x72\x83\x91\x9d\xe4\x7a\xc1\xfd\x81\xca\xb5\x93\x6c\x6d\xff\xbf\xa0\xb9\xde\x46\x79\xa0\xe3\x61\xb2\x95\x47\x31\xa0\x5a\x4f\xe7\x02\x5e\xa0\xfc\x68\x9d\xeb\xc2\xe5\x9a\x6b\xbc\x5b\xa5\x36\x3c\x1e\x36\xcb\xe6\x36\xb2\x9f\x29\xd8\xd6\x90\x12\x73\x5b\xcb\xc1\xc3\x60\xef\x4c\x24\xb0\xe0\x78\xc0\xad\x58\xcb\x65\x8e\xbb\x3d\x0d\xe5\x34\xbd\x29\xf8\xe2\x3a\x82\x79\x5e\x2c\xe6\xda\xf2\x43\x56\x52\xc0\x3a\xf2\x78\x74\x70\x37\x8d\xbd\x73\xcb\x21\x3a\x7f\x4d\x02\xfb\xed\x2f\x1a\x77\xce\x7a\xf4\xd8\x51\x5c\xc2\xfd\x2d\x1d\x9f\xe5\x5a\xd7\x40\xf9\xd5\x35\x4f\xe2\xdb\x18\xfb\xf0\x41\xeb\x86\x63\x3b\x54\xaf\xb5\xeb\x74\x8f\xd1\x73\x7d\x41\xcb\xa2\xab\x7d\x81\x59\x6d\x99\x24\x66\x8d\x03\x95\x7e\x88\xef\x95\x45\xb9\x40\xf9\x79\xa5\xfe\xa3\x9e\xc1\xd0\x56\x0e\xbd\x79\x4d\x12\xab\xf6\xef\xdd\x53\x84\xd4\xa7\xc4\x78\xac\x94\xeb\xc1\x3e\xcc\xd8\x7e\xcc\xb5\xe0\x58\x9e\xa6\x49\x91\x18\x35\xcf\x3f\x02\x00\x00\xff\xff\x50\xb4\xe8\xc3\xbc\x04\x00\x00")

func tmplHistoryMenuHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplHistoryMenuHtml,
		"tmpl/history/menu.html",
	)
}

func tmplHistoryMenuHtml() (*asset, error) {
	bytes, err := tmplHistoryMenuHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/history/menu.html", size: 1212, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplHistoryScriptHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xef\x6e\xdb\x38\xf6\xfd\x9e\xa7\x20\x54\xfc\x20\x07\x75\x65\x3b\x69\x3a\x53\x4f\x53\xfc\xba\x69\xda\x74\x11\x37\x41\x9c\xa4\xbb\x1b\x04\x0b\xda\x62\x2d\x4e\x24\xd2\x20\x29\xbb\x19\xc3\xef\xb4\xcf\xb0\x4f\xb6\x20\xf5\x8f\x92\x28\x59\x6e\x9d\xae\x77\x60\x7d\x89\x25\xde\x7b\x2e\x45\x9e\xc3\x7b\x65\x53\x59\x2c\x5c\xf4\x15\x13\x04\x2c\x3e\x66\x78\x2a\xac\xe5\x72\xef\x4d\xf4\x11\x88\xc7\x29\x3a\xb6\x04\xfa\x26\x3a\xbf\xc3\x19\x8c\x0d\x00\x67\xe3\x63\xcb\x13\x62\xca\xfb\x9d\xce\x7c\x3e\x77\x26\x5c\x40\x81\xc7\xce\x98\x06\x9d\xb1\x07\x99\xe0\x1d\x9f\x42\x17\x31\xe7\x77\x6e\xbd\x7d\xd3\x89\x1c\xdf\xee\xad\x00\x7e\xbb\x07\x00\x00\x33\xc8\x80\x17\x06\xd8\xc5\xe2\x11\x1c\x83\x6e\x7a\x51\xa0\x60\x8a\x18\x14\x21\x43\x27\xb9\x86\x2f\x98\xb8\x1f\x43\x2e\x1e\x02\x2f\x77\x7d\xca\x10\xe7\x21\x43\xb9\x8b\xe1\x4c\x9d\xa6\xe7\x90\x31\xf8\x78\x9d\x41\x83\x63\x70\xa7\x1a\xe5\x71\x47\xd0\x1c\xbc\x87\x02\xb5\x7a\x2f\x7b\xaf\xba\xbd\xc3\x83\xae\x3c\xf6\xdb\xe0\xe0\xe0\xbe\xad\xcc\xee\xf3\x48\x97\x59\xcc\x26\x30\xbd\x6e\xef\xd0\x0c\x94\xdc\xd4\x0f\xf6\x47\xc2\x0c\xc3\x11\x17\x10\x13\xe4\xfe\x20\xd8\x59\x36\x2d\x4d\x60\x8e\xba\x66\x98\x2b\x88\xc9\x7b\x88\xfd\xa6\x38\x15\xbd\x91\x30\x3f\x8e\x70\x05\x45\xe3\x39\x37\xa3\xdc\xdc\x36\x9d\xec\xd4\x5f\xfd\x99\x63\xe2\xd2\xb9\x03\x5d\xf7\x74\x86\x88\x38\xc7\x5c\x20\x82\x58\xcb\x92\xda\xb1\xda\xe0\x6b\x48\xc6\x02\x53\xd2\x42\x33\xb1\x0f\x16\x69\x00\x19\x98\x86\x62\x1a\x4a\x6e\xb8\x74\x1c\x06\x88\x08\x67\x82\xc4\xa9\x8f\xe4\xc7\xbf\x3c\x7e\x72\x5b\x56\x64\x61\xed\xff\x96\xf3\x9b\xf3\xfc\xf9\x94\x61\x22\x61\xd2\x58\x01\xe2\x1c\x4e\x90\x1e\x2f\xb1\x75\xf5\x70\x63\x86\xa0\x40\x71\xc4\x96\xe5\xe2\x99\x1e\x4a\x1e\xae\x83\x09\x41\xec\xec\x7a\x70\x0e\x8e\x41\x8c\x9b\x37\x89\xfa\xe8\xc0\xe9\x14\x11\xf7\xc4\xc3\xbe\xdb\x72\x35\x94\x65\xf6\x91\xd3\xf1\x03\x92\x1d\x95\x83\xfb\x05\x8d\x86\xea\xbc\x65\x2d\x16\xce\x17\x34\x52\xad\x2c\x64\xfe\x72\xa9\xf7\xa2\xd3\xb9\xf8\x0c\x2e\x2e\x4f\x3f\x17\x60\x1c\x4a\xe8\x14\x11\xfd\xb6\x0b\x43\x9c\x21\x44\x23\xd4\xb2\x24\x4c\xf1\x0e\x23\x8b\xc8\x20\x46\x9e\x32\x2a\xe8\x98\xfa\xfb\xab\x0c\x19\x82\xee\xe3\x50\x40\x81\x56\x9a\x86\xcc\x00\x17\xb7\x71\x44\xe4\x5c\x4f\x11\xb1\xf2\x36\xcb\xbd\xc2\x7d\x5c\x7c\x06\xa7\x57\x57\x17\x57\xe5\xb1\x40\x8c\x51\x96\x1b\x0c\x79\xa1\x38\x1c\x63\x4a\x38\xf5\x91\xa3\x1a\x63\x93\xfc\x70\x44\x9d\x2e\xb6\x94\x26\xd1\xa1\x64\xec\x53\x8e\x56\x0c\x7f\x3c\xee\x6f\x46\x6f\x4f\x28\x21\x48\xd9\x01\xe5\xe8\x3a\x6f\x3a\xa3\xb7\x96\x39\x46\x74\xa7\x83\xd3\xe1\xf0\xdd\xc7\xd3\x72\xe4\x98\x86\x0d\xa6\x5e\x32\x7e\x1c\x32\x86\x88\x70\xa3\x25\x22\xd5\xb5\x81\x06\x4a\x1f\x50\x20\x81\x03\x69\x6a\x2f\x16\xd7\xc0\x3a\x87\x5c\x80\xe1\x23\x19\x5b\xcb\x65\x1f\xd8\xe0\xb9\x0e\x28\x05\x1b\xa1\x81\xe7\xc0\xea\x58\xe0\x79\x09\x54\x1e\xad\x82\xcb\x80\x12\xe1\x29\x9f\x5e\xbd\x63\xc1\xef\x43\xe8\xfb\x7f\x47\x90\x45\xe1\xc0\xff\x83\x86\x7e\x67\x34\x64\x3c\x72\xea\x37\x74\x19\x60\x12\x0a\xb4\xa6\xd3\x10\x8d\x29\x71\xb9\x69\x6c\x2b\x97\x38\x86\xbe\x32\xc4\x3d\x39\xe6\xd6\x7e\x6e\xb5\x49\xa6\xe2\xb7\x3d\x83\xb8\xae\x29\xe0\x1e\x9d\x03\xe1\x21\x69\x08\xc1\xde\x5e\xd9\x8c\x0b\x29\x09\x34\x13\x8e\x34\x71\xf8\xd4\xc7\xa2\x65\x0d\x4f\x2f\xdf\x5d\xbd\xbb\xbe\xb8\x92\xec\x2b\xf9\x24\x12\xf1\xe9\xa4\xc5\x05\xbb\xeb\xde\xef\x97\x8d\xb4\xd2\xe6\xaf\xc3\x8b\xcf\xce\x14\x32\x8e\x12\x73\xe7\xbd\x0c\x96\xa4\xd9\xf2\x50\x14\x4a\xa0\x2a\x00\xad\x9c\x39\x29\x83\xe4\xcb\x25\x03\xc6\x50\x50\x16\x38\x9a\x59\x19\x43\x2b\xad\xaa\x3a\x91\x54\x42\xde\x14\x96\xfd\x55\x15\x56\x19\xfa\xe6\xf6\x13\x71\xd1\x37\xc3\x10\xbb\x0c\xce\x93\xe1\xb9\x44\x6c\x8c\x88\x80\x13\xa5\xc8\x92\xa9\xa1\xb0\x43\x33\xe8\xab\x50\xbd\xfb\xf2\x8a\x2a\xa1\x35\xf3\x6a\x4c\xad\xc4\x4b\x01\x0f\x2a\x00\x13\xdb\x6a\x34\xad\xce\x4b\xd1\x0e\x2b\xd0\x12\xdb\x7a\xb4\x5c\xb9\x97\x62\xbe\xac\xc1\xcc\x3c\xaa\x91\xb5\xda\x2f\xc5\x3c\xaa\xc0\x4c\x6c\xab\xd1\xf4\x12\x30\x85\x7b\x55\x01\x97\x1a\xd7\xe3\xe9\x50\xbf\xd4\x40\xd5\xa3\xc4\xf5\x60\x8a\xf4\x6b\x0d\xd2\x55\x9c\x0d\xcc\x68\xaa\x2e\x4c\x71\x5e\x57\xe0\xdc\xdc\x1a\x11\x64\xd3\x47\x18\x4a\x6e\xe7\x1b\x97\xa0\xd3\x41\xc4\x05\x94\x24\x35\x55\xd4\xbe\x94\x28\xea\x53\xa7\x73\x72\xf6\xee\xea\x7a\x18\x9d\x4d\x28\x9d\xf8\xc8\x89\x1e\xcb\x1c\x59\x5a\xb6\xec\x78\xed\xb5\xdb\x5a\xde\x9b\xc2\xf1\x03\x9c\x20\xde\x07\x77\xf6\x98\x32\xa4\x1c\xec\x36\xb0\x7d\x4c\x90\xfc\x3b\x91\xbd\xb1\xef\xb3\x60\x65\x74\x8e\xc4\x05\x39\xa7\xd0\x3d\x81\xbe\x3f\x82\xe3\x87\x56\x41\x54\xf1\xea\xde\xc4\x2b\x51\xce\x1a\x2e\x89\x3c\xd6\x74\xc9\xd8\xbf\x86\x63\x42\xf1\x35\x5c\x52\x1a\xaf\xe9\xb3\xa6\xb9\x24\xe5\x1a\x2e\x37\xb7\xeb\xcc\x65\x79\xed\x5d\x23\x94\xe2\x73\x12\x2d\xa9\xbf\x2a\x97\x74\xb0\xd8\xd3\xab\xba\xf7\xd1\xb7\x14\x32\x69\xab\x20\x40\x50\x30\x42\xca\x9b\x38\xb9\x67\x1a\x95\xd3\xa3\x72\x2d\xee\xd5\x0c\xf3\x10\xfa\xf8\x0f\x28\x03\xaa\xec\x74\x0d\x47\x7e\xae\x90\x53\x59\x1e\xba\xee\x09\xf5\xc3\x80\xb4\x6c\x2e\x18\x26\x13\xc9\xfb\xb8\xe4\xb0\x6b\x8c\x49\x18\x8c\x10\x93\xc6\xd9\x0d\x98\xec\xaf\xe8\x9c\xb7\xee\x72\x72\xbe\xb3\x93\x7b\xb7\xdb\x69\x6d\x10\x3f\x27\x66\x36\xff\xb4\xdb\xa0\xd7\xed\x82\x17\x26\x93\x7b\x7d\xfd\x50\x0f\x87\x53\x79\x9f\x1c\x1c\x17\xca\x5a\xdb\x47\x13\x44\x5c\xbb\x2f\x3f\x7d\x15\x76\x3e\x8a\x2d\xb0\xf0\x91\x6c\xcc\x7a\x94\x37\xc0\xfc\xf0\xbd\xdd\x07\x82\x85\xa8\xd0\x32\xc7\xae\xf0\xec\x3e\x38\xe8\x76\x0b\x2d\x1e\xc2\x13\x4f\xd8\x7d\x70\xd8\xed\x66\xf5\x7a\x6e\x66\x3f\x11\x2e\x20\x11\x58\x2e\xbc\x90\xb8\x6a\x4a\xb3\x79\xce\xcf\xad\xba\xa4\xfa\xf7\x58\x37\xc5\x97\x18\x9d\x48\xcb\x56\x55\xed\x68\x27\xe3\x98\x58\xda\xfb\xda\x7c\x69\x51\x1c\xd9\x9b\x96\x9c\xc0\x76\x32\xae\xb1\xe1\xd2\xc0\xe3\x2c\xdd\xeb\xec\xdd\x18\x29\x65\x59\x2b\x59\xf6\xb7\x86\x64\x8c\x7b\x63\xeb\x04\xc9\x71\x31\x57\xcf\x6c\x9a\x46\xea\x19\x28\x01\xb7\x96\xcb\xa2\x61\x4a\x8d\x5e\x91\x35\xde\xbb\x6f\x98\xf7\x0d\x0f\x65\x0a\xbb\x0f\xec\x6b\x1c\xa0\x02\x9c\x9a\x0b\xca\x02\x28\x24\x83\xfb\x81\xa1\x39\xc0\xe4\x16\xfa\x21\xea\x67\x8f\x72\x07\xdd\xde\x4b\x29\xad\x36\x90\x7f\x0f\x7a\x6d\x70\xd8\xdd\x37\x78\xc2\x6f\x35\x9e\x47\x6d\x50\xe5\x38\x61\xd8\x95\x09\xd4\x78\x37\x40\x3d\x33\x84\x44\xf4\xc1\x8b\x5e\xd9\x57\x1e\x21\xc1\xa2\xd2\x17\xa8\xe9\x7c\xac\x6d\xd7\x87\xe5\xce\x1e\x0c\x06\xc0\x75\xe3\x24\x6e\x3a\x96\xe6\x6e\xc8\xc3\x93\x4f\x82\xcd\x43\x9d\x9d\xf5\x83\x40\xb2\xd0\x83\xeb\xc7\x5b\x96\xae\x1a\x0c\x03\x4c\x28\xfb\xb8\x6a\x80\x57\x8e\xe0\x9a\xf7\xe5\x79\xfd\x20\xe8\x73\x0e\xe0\xf7\xde\x5c\xdc\x77\xf9\x8c\xbc\xe6\x70\x02\x08\xfe\x21\xa3\xca\x91\xad\x09\xdb\x74\x48\xf7\x6a\x3a\x3b\x5b\x25\xc1\x15\xea\xd6\x7b\x6f\x3f\x3b\xbb\x84\x26\x3d\xa6\xaa\xea\x1d\x15\x97\x00\x90\xd3\x6b\xaf\xab\x65\x0f\x43\x6f\xe5\xc2\xf8\x21\x89\x36\x18\x38\xae\x0b\xd4\x3c\x15\x82\x4e\x29\x26\x62\x88\xff\x50\x88\xa6\x26\x0f\x4e\xe5\xbd\x09\x86\x21\x99\xf8\xc8\xd6\xbf\x61\x2a\xe7\x21\x59\xd8\xd6\xad\xe9\xe7\x98\xac\x4a\x43\xc9\x73\x74\x96\x83\xf2\x49\x48\x86\x58\x2f\x05\xe5\x1e\x61\xb7\x21\x0b\x69\x1d\x5a\x91\x88\xf2\x0f\x0a\x9b\xcf\x45\x1a\xfe\x2e\x1d\xed\xd2\x51\xf3\x78\xbb\x74\x54\x0c\xbb\x9d\xe9\xa8\x56\xe0\x20\x97\x91\xda\xcf\x9e\xfd\xfb\x5f\x27\xff\xfb\x49\xe9\x49\xb2\x92\xfe\x35\xf3\xc6\x12\x53\xf6\xe5\xe5\x36\x64\x25\xc5\x17\xd9\x25\x20\xfb\x24\xd9\x52\x9f\x9b\xb4\xef\x96\x36\x9f\x98\x72\xfd\xd8\xa5\xa5\xf2\xb1\x4b\x4b\xc6\xcb\xbb\xb4\x54\x08\xbb\x9d\x69\xa9\x46\xde\x20\x97\x94\x1e\x82\x8e\x57\x9f\x92\xea\x33\xd2\x7f\x3f\x1d\xa5\x03\xb3\xc1\x6c\x34\x8f\x97\xde\xcd\xa6\x22\xfd\x37\xaf\xad\x49\x48\xc3\x30\xf9\xe5\x4e\x76\xb1\x59\x56\xca\xfd\x7c\xb1\xf9\xdc\x54\xee\xd2\x2e\x41\x95\x8f\x5d\x82\x32\x5e\xde\x25\xa8\x42\xd8\xed\x4c\x50\xab\x34\x0e\x76\x59\xaa\x51\x96\xca\x96\xe2\xcd\xe5\xaa\x6c\x2f\xc5\x36\x64\xa9\xf4\xa7\xc1\xfa\xbc\xa4\xfd\x3a\xbe\xf9\x8c\x94\x80\x6f\x57\x2e\x32\x51\xbe\x5e\x11\x3f\x92\x54\x0a\xaa\xf9\x2e\xd5\x57\x8f\x23\x28\x7e\x55\xf2\x7f\x3b\xbd\x57\xfd\x80\xbc\x39\xa5\x6b\xdb\x9c\xb6\x41\xea\x6a\x4b\x95\xea\xcf\x0a\xb1\xeb\xfb\x5a\x36\xaf\xf6\xac\x1b\x3b\xbd\x57\x9d\x36\xd3\x7b\xdd\x48\xe6\x6e\xfd\x59\x49\x7e\x0d\xee\xee\xcf\xae\x77\x96\xb0\x7c\x10\x6c\x56\xf2\xdb\xa3\xf6\x06\x3a\x7f\x32\x89\xef\xc4\x5d\x75\xda\x5c\xdc\x3b\x59\x7f\x9f\xac\x37\xad\xe8\x68\x5b\xf0\xb6\xa8\x1a\xc8\xee\x34\x90\x76\xbc\x6f\xf4\x89\x32\xb8\xda\x56\xad\x5e\x88\x91\x0f\xea\x3b\xb5\x57\x9d\xae\x91\xca\x57\x0d\x29\x28\x88\x7f\xf7\xd4\x6e\x96\xbf\x1c\xc7\x41\xb0\x11\xf5\xdf\xdc\x6e\x87\xee\x6f\x6e\x57\x08\x3e\xdb\xf5\x0d\x36\x29\x75\xf5\xda\x0e\xb8\xb9\xdd\xe9\xbb\xea\xb4\x99\xbe\xab\xc7\x31\x77\xe3\xcf\xea\x05\x6d\xe8\xdc\x9f\x5d\xcf\x58\x0e\xdc\xcd\xed\xe6\xf2\x79\xfc\x0e\x4e\x85\xa8\x8d\xdd\x8c\xf6\xb2\xd1\x4c\xd7\xc5\x1d\xff\xe7\x70\x84\x7c\x29\x53\x35\x15\x76\x69\xb7\x7f\xfd\x1b\x01\x8d\xb7\xfb\xab\x4d\xf9\x86\x3d\xf9\x91\x12\xfb\xe0\xd7\xc2\x75\x86\xdc\x0f\x8c\x06\x7d\xf0\x4b\xb9\xe1\x9a\x1a\x94\x32\x61\x08\x91\xc8\xe5\xa5\xa9\x49\x3a\x15\xb1\x1e\x91\xef\xd3\x79\xe4\x64\x6c\x92\x4e\x45\x34\xf5\x13\xc1\x35\x1e\x3f\xf0\x3e\x38\x2a\x35\xe9\x5c\x36\xf2\xaa\x8e\x53\xd1\xfc\xae\xfc\x96\x47\x99\x55\xb1\xca\xcc\xa8\x9f\xc7\x17\x7d\x87\x65\x3b\xf7\x8e\xe8\x4f\xa5\xcd\xc1\x91\x91\x36\x2f\x0b\x97\x47\x7e\x88\x22\x87\x17\x87\xdd\x72\x93\x62\xda\x51\x25\xd1\x8c\x4d\xd2\xa7\x18\x7d\x15\x67\x5e\x1c\x14\x49\x06\xbf\xc9\xce\x3e\x19\x95\xf4\x79\xd9\x6a\x3a\x7d\xc1\xc4\xb5\xdb\xfa\x6b\xc2\xf7\x3f\x91\x45\x87\xaf\x9b\x2d\x3e\xfa\x42\x52\x24\x45\xb6\x92\x14\xd1\x34\x26\x55\xad\x58\x12\x6c\x4b\x56\x9f\x79\x36\x05\x5b\xcd\x98\xf4\x45\xa3\x76\xfa\x62\xf8\xcf\xa4\x4c\xaf\x5b\xd4\x72\x42\x9a\x83\x62\x83\xce\x9a\x52\xa0\x8c\x36\xbd\x6e\x4d\xae\xab\x68\x8c\xfc\x4a\xab\xca\x0a\xf2\xbc\x2e\x62\xa9\x65\xa8\xd7\xeb\x3e\x1d\xab\x92\x29\xda\x6a\x4a\xdd\xdc\x4a\x32\x41\xc6\xd1\x27\x22\x5a\xe1\x6c\xff\x67\x12\xea\x95\x99\x4d\xbd\x6a\x2e\x1d\x56\x31\xe9\xd5\xda\xeb\xcf\xe1\x9a\xb5\x8f\x91\x3e\x4f\x46\x9e\x70\xf6\x3d\xb4\x89\xcb\xeb\xec\x3f\x81\x2d\x16\x00\x11\x17\x2c\x97\xff\x09\x00\x00\xff\xff\x37\x35\x29\x52\x7f\x4c\x00\x00")

func tmplHistoryScriptHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplHistoryScriptHtml,
		"tmpl/history/script.html",
	)
}

func tmplHistoryScriptHtml() (*asset, error) {
	bytes, err := tmplHistoryScriptHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/history/script.html", size: 19583, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xcb\x09\xc3\x40\x0c\x05\xef\xaa\xe2\xb1\x05\x24\x0d\x2c\x6e\x22\x15\xd8\x91\x82\x4d\xf6\x63\xec\xbd\x18\xa1\xde\x83\xe2\x40\x58\xf0\x75\x34\x1a\x9e\x2a\x58\x5e\x4b\x11\x84\x29\xd5\x9a\xf7\xf7\x11\x60\x46\x71\x6e\x39\x0d\x44\x71\x96\x91\x07\x02\x00\x55\x34\xc9\x6b\x1a\x9b\x20\x38\x96\x2d\xdc\xcc\x7a\xbe\x3f\xb7\x65\x6d\xce\x29\xde\xcf\x5f\x8a\x53\xe5\xe3\xa2\xe1\xf8\x67\x9e\x46\x77\x95\xc2\x8f\x7f\xcc\x6b\xdf\x45\xaa\x90\xc2\x30\xfb\x04\x00\x00\xff\xff\x17\x3c\x84\x55\xba\x00\x00\x00")

func tmplIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplIndexHtml,
		"tmpl/index.html",
	)
}

func tmplIndexHtml() (*asset, error) {
	bytes, err := tmplIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/index.html", size: 186, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplLogBodyHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x4f\x33\x21\x10\xc6\xef\x7c\x8a\x09\xe9\xf1\x7d\xbb\x1e\x3c\x19\x76\x8f\x3d\xb5\x89\x31\x1e\x7b\xa1\xcb\x48\x89\x2c\x34\x30\x5d\xd3\x10\xbe\xbb\x59\xa8\xd6\xd8\xae\x7a\x21\xcc\x3c\x3f\xe6\xcf\x13\x52\x52\xf8\x62\x1c\x02\xdf\x79\x75\xe2\x39\xa7\x04\x84\xc3\xc1\x4a\x42\xe0\x03\xba\x23\xcf\x99\x09\x65\x46\xe8\xad\x8c\xb1\xe5\xbd\x77\x24\x8d\xc3\xc0\x3b\xc6\x00\x00\xc4\x2e\x74\xf5\x42\x72\x67\xf1\x83\xab\x41\x39\xff\x47\x0a\xe6\x80\x8a\x57\xae\xb2\xe1\x12\xd4\xc4\xbe\x83\xf5\x34\x89\x68\x68\x7f\x43\x7b\x36\xc3\xac\xb6\xc6\x11\xed\x9c\xb8\xf2\xae\x27\xe3\xdd\x9c\xbe\xc1\x18\xa5\x9e\xad\xfd\x28\x83\x1c\x90\x30\x7c\x03\x44\xf3\x75\x85\x94\x20\x48\xa7\x11\x16\xaf\x78\xfa\x07\x8b\x51\xda\x23\xc2\x43\x0b\x4b\xeb\xf5\x53\x51\x72\xfe\x79\x7b\x11\x29\x78\xa7\xbb\x94\x4a\x11\xc8\x59\x34\xe7\xd4\xed\xd1\x26\xb0\xf4\x59\x16\x6f\x26\xfe\x16\x26\xcc\xa0\x21\x86\xbe\xe5\xdb\x48\x92\x4c\xbf\xbd\x3c\xac\xc6\xe5\xbc\x3c\x38\xcd\xe1\xcd\x28\xda\xb7\xfc\xfe\x8e\xff\xda\x71\xd5\xd3\x6c\xc3\x0b\xb5\x89\xfa\x0f\x54\x71\xf8\x8a\xbb\xf2\x17\x9d\x9a\x3c\x64\x67\x71\xfa\x58\x1d\x63\xa2\x51\x66\xec\xd8\xa7\xfe\x1e\x00\x00\xff\xff\xec\x13\x5d\x11\xd1\x02\x00\x00")

func tmplLogBodyHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplLogBodyHtml,
		"tmpl/log/body.html",
	)
}

func tmplLogBodyHtml() (*asset, error) {
	bytes, err := tmplLogBodyHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/log/body.html", size: 721, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplLogMenuHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x93\xbf\x8e\x9c\x30\x10\xc6\xfb\x7d\x0a\x6b\xae\xe6\xdc\x47\x40\x11\x45\x4a\x8a\x14\x29\xae\x8f\x06\x3c\x0b\xa3\x35\x63\x64\x1b\x74\x2b\xc4\xbb\x47\xfc\xf1\xee\x1e\x39\x5d\x92\x26\x15\xf6\xf8\xfb\xcd\x7c\xf6\x0c\xd3\x64\xe8\xcc\x42\x0a\x3a\x92\x01\xe6\xf9\x94\x0b\x8e\xaa\xb6\x18\x42\x01\x82\x63\x85\x5e\x6d\x9f\x8c\x65\x24\x1f\x28\x6d\xcf\xfc\x4a\x26\x8b\xae\x87\xf2\xa4\x94\x52\xb9\xe1\x1b\x58\x3b\x89\xc8\x42\x7e\x3f\x3b\x9e\xef\x29\x5a\x42\xf3\x46\xb3\xea\xaa\x21\x46\x27\x2a\x5e\x7b\x2a\x60\xdb\xc0\x01\x8c\xae\x69\x2c\xa9\xda\x59\x8b\x7d\x20\x03\xca\x60\xc4\x3d\xbc\x94\xdf\xe2\x29\x8c\xbe\xa1\x58\xc0\xd3\x46\x83\x42\xcf\x98\xd1\x6b\x8f\x62\xc8\x14\x70\x46\xbb\x68\xd7\xe8\xe2\xdc\x3b\x7b\x2b\x75\x34\x17\x7a\x94\x64\x26\xf8\xcc\x89\xbd\x42\xf9\xb2\xd9\x11\x1c\xb9\xc1\xc8\x4e\x72\xbd\xe8\x3e\x40\xb9\x76\x92\xad\xe9\xff\x97\x34\xd7\xdb\x53\x1e\x70\x3c\xbc\x6c\xe5\x51\x0c\xa8\xd6\xd3\xb9\x80\x27\x28\x3f\x5b\xe7\xba\x70\xb9\xe6\x1a\x1f\x5a\xa9\x0d\x8f\x87\xce\xb2\xb9\x3d\xd9\x7d\x0a\xb6\x36\xa4\x89\xb9\xb5\xe5\xe0\x61\xb0\x0f\x26\x92\x58\x70\x3c\xe8\x56\xad\xe5\x32\xc7\xdd\x9e\x86\x72\x9a\x5e\x14\x7c\x73\x1d\xc1\x3c\x2f\x16\x73\x6d\xf9\x7d\x4a\xdd\xb1\x96\x43\x74\xfe\x9a\xe8\x7d\xf7\xa7\x04\x77\xbe\x47\x8f\x1d\xc5\x65\x72\x7f\xa4\xe5\x87\x6c\xba\x1e\xd6\x91\xc7\xe3\xf5\x1f\x5a\xb1\xe7\xb7\xae\x81\xf2\xbb\x6b\xfe\xd2\x4f\x1b\x63\x1f\x3e\x69\xdd\x70\x6c\x87\xea\xb9\x76\x9d\xee\x31\x7a\xae\x2f\x68\x59\x74\xb5\x77\x30\xab\x2d\x93\xc4\xac\x71\xa0\xd2\x1f\xf1\xb3\xb2\x28\x17\x28\xbf\xae\xe8\x3f\xd6\x33\x18\xda\xca\xa1\x37\xcf\xa9\xc4\x5a\xfb\xf7\xec\x69\x86\xd4\x97\x44\xdc\x2b\xbd\x9d\x04\x3d\xd8\x77\xa7\x6c\x5f\xe6\x5a\x70\x2c\x4f\xd3\xa4\x48\x8c\x9a\xe7\x5f\x01\x00\x00\xff\xff\x92\xa6\xa5\x2b\xbe\x04\x00\x00")

func tmplLogMenuHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplLogMenuHtml,
		"tmpl/log/menu.html",
	)
}

func tmplLogMenuHtml() (*asset, error) {
	bytes, err := tmplLogMenuHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/log/menu.html", size: 1214, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplLogScriptHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x2a\x4e\x2e\xca\x2c\x28\x51\xaa\xad\x55\xa8\xae\x56\x48\xcd\x4b\x51\xa8\xad\x05\x04\x00\x00\xff\xff\x3e\x13\xcc\xb1\x1d\x00\x00\x00")

func tmplLogScriptHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplLogScriptHtml,
		"tmpl/log/script.html",
	)
}

func tmplLogScriptHtml() (*asset, error) {
	bytes, err := tmplLogScriptHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/log/script.html", size: 29, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplParameterBodyHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x96\xcf\x8e\x9b\x30\x10\xc6\xef\x3c\xc5\x94\x7b\xc2\xa1\xb7\x8a\x22\x6d\xca\xa1\x95\x68\x15\x25\x44\x7b\x76\xf0\x84\xa2\x80\xbd\xb2\x1d\xd2\x95\xe5\x77\xaf\xcc\x9f\x94\x6d\xb6\xc1\x2a\xce\x29\x99\xf9\x66\x7e\x9f\x27\x23\xb0\xd6\x14\x4f\x15\x43\x08\x8f\x9c\xbe\x86\xc6\x80\xd6\xa0\xb0\x79\xa9\x89\x42\x08\x1b\x64\x97\xd0\x98\x20\xa6\x55\x0b\x45\x4d\xa4\xfc\x1c\x16\x9c\x29\x52\x31\x14\x61\x12\x00\x00\x4c\x73\x82\x5f\xc3\x24\x08\x82\x2e\xd1\x25\x15\x39\xd6\x98\xdc\x7e\xf7\x31\xf1\x36\xd0\x07\x69\xf2\x85\x33\xc9\x6b\x84\xa7\x42\x55\x2d\x51\x48\xe1\x13\xc4\x91\xa2\xef\xab\xef\x82\xf6\xa3\xf5\x7a\xe8\x72\x6b\x62\xcc\x7d\xf9\x5d\xd3\x38\xfa\xdb\xd4\x3f\x5d\xc2\xd7\x3c\xdf\x3a\x7a\xb4\x7e\xac\x7c\x62\xc6\x03\xfb\x85\x0b\xf5\x10\x3b\x50\xb7\x5c\xa8\x85\x40\xdb\x66\xef\x0c\xdc\x7b\x20\x7e\x63\xa7\xfa\xf2\x0b\xd2\x8d\xe3\x88\xb5\x5e\xf7\x25\xe9\xc6\xdb\x94\xff\x78\x48\x89\x22\x47\x22\xd1\xd5\xc2\xa8\xf7\x36\x84\x2d\x91\xf2\xca\x85\xf3\x0c\x46\xbd\xbf\x11\xec\x51\xb4\x28\x5c\xf9\xbd\xda\x3b\x7d\xeb\xb0\x81\x6f\x2d\x78\x58\xc5\x89\x8d\x83\x44\x01\x3f\x48\xe3\xbc\x08\xb6\x80\x91\x66\xe9\x22\x40\xc6\x4b\xc8\xb0\xc5\x7a\x0e\x9c\xf1\xb2\xd3\x2d\x05\x6e\x6a\xce\x1b\x79\x7e\x85\xa7\xa2\x40\x29\x21\xe7\x67\x64\x73\xf0\xb1\xa8\xaf\xe9\x4a\xbc\xf9\x38\xec\x32\x57\xfc\x61\x97\x2d\xc4\xee\xf0\x24\x50\xfe\x84\xbc\xb2\x7f\xf5\xe3\x07\xfb\xa0\xb5\xd2\xc5\x0b\xff\x9d\x17\xe7\xb9\x53\x5a\xcd\xe2\x75\x22\xac\xbc\x90\x72\x76\x8d\x47\x9d\x31\x0b\x5f\x96\x29\xb6\x8f\xe6\xa8\xf5\x3a\xc5\x76\x3c\xd5\xff\x52\x9e\xa5\x9c\x3b\xd0\xb3\x94\xf3\xb3\x8b\xa3\xc9\x75\x25\x8e\x68\xd5\x0e\x5f\x3f\xac\x56\x10\xad\xed\x45\xa7\xa1\x1f\x61\xb5\x4a\x82\x21\x3b\x64\x04\xbf\xbe\x13\xbd\xdd\x94\xba\x9c\xd6\x80\x8c\x82\x31\xbf\x03\x00\x00\xff\xff\x89\x4f\x47\x37\x74\x09\x00\x00")

func tmplParameterBodyHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplParameterBodyHtml,
		"tmpl/parameter/body.html",
	)
}

func tmplParameterBodyHtml() (*asset, error) {
	bytes, err := tmplParameterBodyHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/parameter/body.html", size: 2420, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplParameterMenuHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x53\x3d\x8f\xdb\x30\x0c\xdd\xf3\x2b\x04\xde\xec\xd3\x5e\xd8\x1e\x8a\x02\xed\xd0\xa1\xc3\xed\x05\x6d\x31\x36\x11\x99\x32\x24\xd9\xb8\xc0\xf0\x7f\x2f\xfc\xa1\x24\xe7\x16\x77\xed\xd2\x29\x12\xf5\x1e\xdf\x0b\xf9\x3c\x4d\x86\xce\x2c\xa4\xa0\x23\x19\x60\x9e\x4f\xb9\xe0\xa8\x6a\x8b\x21\x14\x20\x38\x56\xe8\xd5\xf6\x93\xb1\x8c\xe4\x03\xa5\xeb\x99\x5f\xc9\x64\xd1\xf5\x50\x9e\x94\x52\x2a\x37\x7c\x23\xd6\x4e\x22\xb2\x90\xdf\xdf\x8e\xef\x7b\x8b\x96\xd0\xbc\xc1\xac\xb8\x6a\x88\xd1\x89\x8a\xd7\x9e\x0a\xd8\x2e\x70\x20\x46\xd7\x34\x96\x54\xed\xac\xc5\x3e\x90\x01\x65\x30\xe2\x5e\x5e\xe4\xb7\x7a\x2a\xa3\x6f\x28\x16\xf0\xb4\xb1\x41\xa1\x67\xcc\xe8\xb5\x47\x31\x64\x0a\x38\xa3\x5d\xb0\x6b\x75\x71\xee\x9d\xbd\x49\x1d\xcd\x85\x1e\x25\x99\x09\x3e\x73\x62\xaf\x50\xbe\x6c\x76\x04\x47\x6e\x30\xb2\x93\x5c\x2f\xb8\x77\xa8\x5c\x3b\xc9\xd6\xf6\xff\x0b\x9a\xeb\x6d\x94\x07\x3a\x1e\x26\x5b\x79\x14\x03\xaa\xf5\x74\x2e\xe0\x09\xca\xcf\xd6\xb9\x2e\x5c\xae\xb9\xc6\x87\x55\x6a\xc3\xe3\x61\xb3\x6c\x6e\x23\xbb\xa7\x60\x5b\x43\x4a\xcc\x6d\x2d\x07\x0f\x83\x7d\x30\x91\xc0\x82\xe3\x01\xb7\x62\x2d\x97\x8b\xe9\xcd\x9f\x86\x72\x9a\x5e\x14\x7c\x73\x1d\xc1\x3c\x2f\x1e\x73\x6d\xf9\x43\x5a\xcb\x21\x3a\x7f\x4d\xec\xfd\xf6\x41\x83\xe4\x11\xeb\xc8\xe3\xf1\x3f\x3c\xcc\x73\xd7\xe8\xd1\x63\x47\x71\x89\xf7\x8f\x74\x7c\xdf\xe0\x9d\x6b\x5d\x03\xe5\x77\xd7\xfc\x25\xbe\x8d\xb1\x0f\x9f\xb4\x6e\x38\xb6\x43\xf5\x5c\xbb\x4e\xf7\x18\x3d\xd7\x17\xb4\x2c\xba\xda\x57\x98\xd5\x96\x49\x62\xd6\x38\x50\xe9\x93\xf8\x59\x59\x94\x0b\x94\x5f\x57\xea\x3f\xea\x19\x0c\x6d\xe5\xd0\x9b\xe7\x24\xb1\x6a\xff\xde\x3d\x85\x48\x7d\x49\x8c\xbb\xd2\xdb\x28\xe8\xc1\xfe\x31\x66\xfb\x31\xd7\x82\x63\x79\x9a\x26\x45\x62\xd4\x3c\xff\x0a\x00\x00\xff\xff\xb3\x78\x5d\xf2\xbf\x04\x00\x00")

func tmplParameterMenuHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplParameterMenuHtml,
		"tmpl/parameter/menu.html",
	)
}

func tmplParameterMenuHtml() (*asset, error) {
	bytes, err := tmplParameterMenuHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/parameter/menu.html", size: 1215, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplParameterScriptHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x2a\x4e\x2e\xca\x2c\x28\x51\xaa\xad\xe5\xb2\x81\x30\xed\xb8\x6c\xf4\x61\xac\xea\x6a\x85\xd4\xbc\x14\x85\xda\x5a\x40\x00\x00\x00\xff\xff\xd6\x3e\xb3\xfa\x30\x00\x00\x00")

func tmplParameterScriptHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplParameterScriptHtml,
		"tmpl/parameter/script.html",
	)
}

func tmplParameterScriptHtml() (*asset, error) {
	bytes, err := tmplParameterScriptHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/parameter/script.html", size: 48, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _langEnUsAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\x3d\x6e\xc3\x30\x0c\x85\xf7\x9c\x82\xf0\x1c\xe4\x00\x59\xb3\xb4\x5b\x87\x2e\x9d\x04\xa2\x62\x2d\x01\xfa\x09\x28\xba\x85\x60\xe8\xee\x85\x1c\xa7\x71\x2b\xa3\x31\xb2\x19\xf6\xf7\x3e\x92\x7e\xe3\x0e\xa0\x3b\x59\xc9\xdd\x11\xea\x33\x40\x17\xc5\x10\x77\xc7\xf9\xf5\x0e\xa0\xec\xa1\x52\x5a\x69\xcc\x69\xc1\x05\xaa\xd4\x38\x1e\x4e\x71\x08\x52\x0a\x68\xcc\xdd\xfe\x8f\xe4\xf7\xe7\x74\xf1\x55\x9d\xcf\xca\x90\xed\x8d\x28\x1b\x94\x27\x21\x6e\xdd\xcf\x80\x1e\x16\x86\x09\x03\x41\xe7\x0e\xcd\xa0\x55\x36\xcd\xf0\xcf\xd4\x33\x71\x8a\x41\xf5\x4c\x24\x36\xf4\x2b\x57\x3f\x91\x73\xb1\x8a\x5e\x26\xb4\x94\x26\x3c\x04\x26\xd4\x8a\x3c\x5a\xa7\xde\xeb\xb8\xb5\x9f\x72\x8d\x83\xc1\xb4\xdc\xeb\x92\x86\x29\xdd\x5e\xb1\x31\x98\xda\x93\xda\xad\x94\x58\x4f\x1f\x8c\x9e\x1e\xdd\x0f\x6c\x00\x31\x04\x67\x4c\x52\x99\xd7\xab\xb0\x94\xc7\x57\xff\x57\x7a\xbb\x8a\x63\xcf\xe8\xef\x37\xf5\x15\xd9\xe9\x5b\x2e\xc7\x81\xb7\x34\xf4\x16\x07\x30\xf8\x49\xdb\xab\xb9\x97\x98\x3b\xd9\x95\xef\x00\x00\x00\xff\xff\xa2\x16\x10\xd2\x54\x03\x00\x00")

func langEnUsAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_langEnUsAllJson,
		"lang/en-us.all.json",
	)
}

func langEnUsAllJson() (*asset, error) {
	bytes, err := langEnUsAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lang/en-us.all.json", size: 852, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _langFrAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x96\xcf\x6e\xdb\x48\x0c\xc6\xef\x7d\x0a\xc2\x97\x5e\x8a\x3c\xc0\xde\xda\x78\x53\x27\xd8\xda\x41\x9c\x4d\xd1\x93\x31\x91\x68\x8b\xbb\xf3\x47\x3b\x33\x74\x2a\x18\x7a\x9f\xf5\x73\xf8\xc5\x16\x23\x27\x69\x67\x2c\x06\x2e\xf6\x68\xf3\xf7\x7d\x22\x87\x1c\x4a\xbb\x77\x00\x00\x93\x8f\xad\x9f\xfc\x06\xc7\x1f\xc3\x1f\x2e\x36\x98\xfe\x9a\x7c\xdc\x7a\xd2\x93\x21\xd0\x7f\x78\x86\x79\x23\xc1\x8e\x63\xce\x7e\xd2\xce\x99\xf0\x77\x07\x95\x26\xb4\x11\xc8\xc2\x67\x27\xa8\x2f\x8f\xc8\xab\x04\x07\x36\xb3\xbb\xa4\xd8\x09\xea\x07\xd2\x1a\x73\x7a\xaa\x24\xf8\xc6\xb1\x2f\x58\xac\x04\x76\x7a\xd8\x57\x68\x1e\x7d\x69\x8e\x5b\xaa\x10\xae\x6b\x49\x46\xa1\x75\x81\x22\xad\xe1\x7a\x9a\x4b\x7f\x0f\x51\x10\xa5\x48\x86\x5e\xe1\xa3\x80\x5e\x1d\xf6\x5b\x4f\x58\x94\x31\x73\x06\xa5\xe6\x54\x15\x63\xd9\xcb\x19\x85\xe8\xbc\x74\x4c\xc7\x28\xfd\xc3\x45\xed\x33\x36\x54\xcb\xad\x78\x0e\x1f\xf6\xb9\xea\xda\xd6\xf8\x1d\xfe\x7c\x10\x54\xaf\xe1\x4c\x74\xa3\xac\xd4\x43\x65\xb7\x27\xf5\xdf\xb0\x96\x70\x4e\x03\x12\x4b\x5c\x74\x67\xb2\x39\xfb\x87\x0a\x11\x96\x9d\x15\xe7\x04\xbd\xa5\xc3\xbf\x1e\x21\x74\xb6\x6a\xbc\xb3\x14\x54\x24\x57\xd8\x7c\x51\xd2\x55\xfb\xa2\x7c\x28\x59\xe9\x88\x8d\xa2\x1c\x9d\xd3\xa6\x91\xa6\x6a\xce\x54\xd4\x3d\x97\xee\xe0\xbc\x4c\x77\xee\x7c\x6c\x44\xd8\xd7\x25\xbd\x15\xd9\xed\xc8\x25\x9a\xb3\x79\x44\x0f\x8b\x35\x5c\x39\xad\xdd\x13\xfa\x20\xea\x93\x1a\x6a\x84\xf5\x2b\x99\x59\x2d\x2a\xa9\xfc\x45\x15\xdd\xc9\x93\x6f\x3d\x86\xc0\x5e\xba\x2c\x43\x98\x9c\x05\x15\x8d\x0b\x6d\x73\xd8\x8f\x5c\x83\x3b\x45\xd2\xf8\xdc\x6a\xa6\x11\x1a\xa6\x8a\xb4\xd4\xd3\x41\x03\xaa\xaa\xd8\xb0\x3e\xec\xa1\x7e\xaf\xf8\x2f\xc7\xbe\x7e\xdf\x30\x8d\x78\xdd\xa9\x28\xa5\x7f\xaf\xf8\x7b\x3a\xab\x56\x48\x23\x49\x61\x18\xe8\x26\x6d\xc2\xb7\xf2\xa9\x30\xc6\x74\xee\x2f\xc3\xdd\x20\x97\x67\xb9\xc4\x56\xb0\x58\x62\x1b\x47\xda\xbe\x74\x2c\x0e\xd5\x92\x8b\x99\x5a\x72\x88\x8a\x2c\xd6\xf0\x95\xac\xb4\x6d\x1f\x28\x62\x08\x08\x35\xc3\x36\xbd\x44\x82\xe3\x88\x96\x73\xa7\x7b\x34\x2d\x7a\x15\xe5\xb6\x27\xe2\xb0\x7f\x46\x72\x2d\x19\x0c\x51\x19\xa9\xd2\x1f\xf1\x4c\xf6\x75\x4a\x1e\xab\x61\x0b\x8c\xeb\x52\x4d\xf0\x03\xca\xc5\x28\xbe\x28\x16\x8c\xe5\xab\xa2\x70\x92\xde\x4a\xcf\xf1\x97\x93\x1a\xf1\xf8\xcc\xe2\x63\xef\xd4\x5a\xe9\xe1\x16\x9e\x6a\xbf\xa1\x74\x77\x17\xe5\xf8\xd6\xab\x5a\x75\x25\x6d\x53\x53\x26\xbb\xdd\xc5\xa5\x63\x1b\xfb\x1e\x6a\xd5\x4d\x3e\x8c\xd8\xe5\x48\xb1\x06\x1a\xda\x48\x93\x35\x53\xe5\xd7\x89\x76\x4f\x02\xfb\x49\x15\xbe\x06\x6b\x62\x23\x6d\x6e\xd7\x61\xd1\x3b\xd3\xad\x1a\x4c\x3b\x79\x45\x76\x65\x30\x9e\x6e\xb6\x63\xbd\xd7\xa0\x0c\xfc\x54\xd1\x11\x85\xa8\xb4\xbe\x18\xad\xfe\x4d\x41\x96\x42\x8b\x3e\x38\xbb\xda\x78\xc4\x48\x56\xfa\x66\x9b\xa1\xd6\x2e\x19\xde\x0e\x78\xdf\x8f\x9a\xb0\xf5\xa8\xea\x15\x1a\x45\x7a\x55\xa5\x47\x4b\xdd\x7b\xb1\x81\x46\x85\x9f\xf3\x3c\x3a\xc0\xe0\x10\xc6\x4b\x3b\x5f\x7d\x5e\x8a\xab\x48\x06\xd7\x5e\x9d\x7c\x12\xfd\x5a\xb2\xe9\xa3\x35\x36\x08\x6d\xda\x97\xbb\xdd\xc5\xfd\x8b\x6b\xdf\xff\xbf\x3a\xde\x34\xce\x4b\xf4\x6e\xe3\x95\x39\xaf\x97\x4f\xce\xeb\x62\x87\x76\x8e\xfd\xb9\x3d\xfc\xe6\x18\x1a\xb5\xc5\x5f\x6c\xde\x19\xb2\x63\x4a\xef\xfa\xff\x02\x00\x00\xff\xff\xcd\x16\x5d\x64\x75\x0c\x00\x00")

func langFrAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_langFrAllJson,
		"lang/fr.all.json",
	)
}

func langFrAllJson() (*asset, error) {
	bytes, err := langFrAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lang/fr.all.json", size: 3189, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testConfigfortestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x93\x4d\x8e\xdb\x30\x0c\x85\xf7\x3e\xc5\x83\xb3\x98\x29\xe0\x4c\x26\x5d\xb4\x03\xed\x7a\x81\xa2\x28\x7a\x01\xda\xa2\x62\xc1\xb2\x68\xe8\x27\xae\x6f\x5f\xc8\x4e\x32\xc9\xa0\x45\xb9\xb2\xf4\xc8\x47\xf2\xb3\xbd\xdf\xef\x2b\x60\x24\xeb\x55\xb5\xbb\x04\x7e\x50\xa0\x31\xc2\x48\x40\xeb\x44\xc6\x38\x2c\x15\x80\xdb\x41\x55\xd8\xe1\xbb\x84\x91\x9c\x5b\xa0\xc5\x3f\x25\x74\x3d\xf9\x13\xaf\x69\x40\x0e\x4e\xa1\xee\x53\x9a\xa2\x3a\x1c\x68\xb2\x2f\xd7\xd2\x97\x4e\xc6\x72\x71\x88\xc3\xa2\x29\xd1\xa1\xae\x76\x48\x3d\x63\xe0\xa5\x81\x4d\x4f\x11\x26\x30\x43\xe1\x5a\xad\x29\xf6\xad\x50\xd0\x8f\x1e\x97\x4e\x49\x06\xf6\x0a\xf5\x22\x39\xac\xcf\xc5\xcf\x91\x3f\x65\x3a\x31\x9e\xd9\xef\x73\x6c\x60\xc2\xa7\x35\xff\x26\x28\xac\xca\xfb\xca\x3f\xd9\x04\x8e\x3d\x92\x1d\xb9\x41\xcb\xf0\x92\x90\x04\xb1\xec\x88\x96\x3b\xca\x91\xb1\x48\x06\x05\x2e\x20\xba\x81\x35\xda\x05\x32\xb1\x9f\x99\x52\xcf\x01\xe4\xf5\x8d\x11\x9e\xad\x47\xe4\x4e\xbc\xde\x7a\x87\xad\xc3\x2f\x3b\x72\x50\xa8\xbf\xbe\x96\x49\x27\xf2\xb6\x6b\x0c\x25\x72\x0d\x87\x20\xa1\x99\x29\x78\xeb\x4f\x8d\xf5\x46\x1a\xcd\x6d\x3e\xa9\x6d\x74\xb9\x3c\x00\x8e\xcf\x5c\xf8\xae\x6a\x7d\xb9\x34\xd6\xb1\x42\x7d\x6d\xef\xe4\xb4\x92\x15\x94\xb9\x0b\xe0\x4e\x34\xc3\x7a\x88\x31\xce\x7a\xc6\x58\xce\x53\x4e\x18\xa5\x1b\x14\x52\xc8\xdb\xdb\xbb\x3b\xee\xb6\x62\x1e\x27\x47\x89\x1b\xc4\x44\xc9\x76\x6b\xab\xe2\x64\xc4\x69\x0e\x2b\x29\xeb\xd1\x66\xaf\x1d\xeb\xd5\x43\xf3\xf9\xc1\x62\xe6\x16\xb1\x20\x4b\x05\x49\x2e\x04\x17\x68\x36\x94\xd3\x47\xdd\x8b\xbf\xe6\x3c\x7b\xee\x38\x46\x0a\x4b\xd9\xa3\x8c\x9a\x02\xb1\xb1\x03\x4c\x10\x9f\xd6\xad\x66\x6e\x23\x87\x33\x5f\x5e\xf0\x1c\xa3\x82\x21\x17\xb9\xda\xcd\x3d\x6d\x39\x3d\x3b\x87\x55\xee\x6d\x4c\x12\x96\x6f\x5d\xb2\x67\x4a\xac\x6f\xb9\xb7\xa8\x00\xc9\x69\xca\x29\x6e\xb4\x3b\xf1\x51\x1c\x5f\xd1\x97\xa0\xf7\xea\x1b\xb4\x99\xdb\xff\xa5\x6c\x31\x49\x48\x50\xa8\xd5\xf1\x78\x3c\xd6\x77\xc2\xb6\xf3\xbd\xfc\x79\x93\xad\x37\x2e\xff\xd6\xff\xf2\xdf\x16\xb8\xf7\x29\x34\x14\x6a\x27\x1d\xb9\x5e\x62\xaa\x3f\xb4\x57\xa8\xdf\x5e\xdf\xbe\xdc\x5f\xe7\xc8\xc1\xd3\x58\x3e\xa0\x20\xf2\x58\x41\x31\xce\x12\xf4\x5f\xa4\xf2\xff\xb6\x14\xef\x3f\xbb\xba\xfa\x13\x00\x00\xff\xff\xbd\xee\x25\x58\x51\x04\x00\x00")

func testConfigfortestYamlBytes() ([]byte, error) {
	return bindataRead(
		_testConfigfortestYaml,
		"test/configForTest.yaml",
	)
}

func testConfigfortestYaml() (*asset, error) {
	bytes, err := testConfigfortestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/configForTest.yaml", size: 1105, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testWrongconfigfortestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\xd5\xe5\x52\x56\xc8\x49\xcc\x4b\x2f\x4d\x4c\x4f\x55\xd0\x48\xcd\xd3\x2d\x2d\xd6\x51\x48\x2b\xd2\xe4\x52\x50\xc8\x4d\xcc\xcc\xd3\x83\xcb\x59\x29\x80\x25\xb9\xb8\x00\x01\x00\x00\xff\xff\x21\x4b\x20\xdd\x34\x00\x00\x00")

func testWrongconfigfortestYamlBytes() ([]byte, error) {
	return bindataRead(
		_testWrongconfigfortestYaml,
		"test/wrongConfigForTest.yaml",
	)
}

func testWrongconfigfortestYaml() (*asset, error) {
	bytes, err := testWrongconfigfortestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/wrongConfigForTest.yaml", size: 52, mode: os.FileMode(420), modTime: time.Unix(1560168292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"tmpl/bloomsky/body.html": tmplBloomskyBodyHtml,
	"tmpl/bloomsky/menu.html": tmplBloomskyMenuHtml,
	"tmpl/bloomsky/script.html": tmplBloomskyScriptHtml,
	"tmpl/bloomsky.txt": tmplBloomskyTxt,
	"tmpl/endScript.html": tmplEndscriptHtml,
	"tmpl/header.html": tmplHeaderHtml,
	"tmpl/history/body.html": tmplHistoryBodyHtml,
	"tmpl/history/menu.html": tmplHistoryMenuHtml,
	"tmpl/history/script.html": tmplHistoryScriptHtml,
	"tmpl/index.html": tmplIndexHtml,
	"tmpl/log/body.html": tmplLogBodyHtml,
	"tmpl/log/menu.html": tmplLogMenuHtml,
	"tmpl/log/script.html": tmplLogScriptHtml,
	"tmpl/parameter/body.html": tmplParameterBodyHtml,
	"tmpl/parameter/menu.html": tmplParameterMenuHtml,
	"tmpl/parameter/script.html": tmplParameterScriptHtml,
	"lang/en-us.all.json": langEnUsAllJson,
	"lang/fr.all.json": langFrAllJson,
	"test/configForTest.yaml": testConfigfortestYaml,
	"test/wrongConfigForTest.yaml": testWrongconfigfortestYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"lang": &bintree{nil, map[string]*bintree{
		"en-us.all.json": &bintree{langEnUsAllJson, map[string]*bintree{}},
		"fr.all.json": &bintree{langFrAllJson, map[string]*bintree{}},
	}},
	"test": &bintree{nil, map[string]*bintree{
		"configForTest.yaml": &bintree{testConfigfortestYaml, map[string]*bintree{}},
		"wrongConfigForTest.yaml": &bintree{testWrongconfigfortestYaml, map[string]*bintree{}},
	}},
	"tmpl": &bintree{nil, map[string]*bintree{
		"bloomsky": &bintree{nil, map[string]*bintree{
			"body.html": &bintree{tmplBloomskyBodyHtml, map[string]*bintree{}},
			"menu.html": &bintree{tmplBloomskyMenuHtml, map[string]*bintree{}},
			"script.html": &bintree{tmplBloomskyScriptHtml, map[string]*bintree{}},
		}},
		"bloomsky.txt": &bintree{tmplBloomskyTxt, map[string]*bintree{}},
		"endScript.html": &bintree{tmplEndscriptHtml, map[string]*bintree{}},
		"header.html": &bintree{tmplHeaderHtml, map[string]*bintree{}},
		"history": &bintree{nil, map[string]*bintree{
			"body.html": &bintree{tmplHistoryBodyHtml, map[string]*bintree{}},
			"menu.html": &bintree{tmplHistoryMenuHtml, map[string]*bintree{}},
			"script.html": &bintree{tmplHistoryScriptHtml, map[string]*bintree{}},
		}},
		"index.html": &bintree{tmplIndexHtml, map[string]*bintree{}},
		"log": &bintree{nil, map[string]*bintree{
			"body.html": &bintree{tmplLogBodyHtml, map[string]*bintree{}},
			"menu.html": &bintree{tmplLogMenuHtml, map[string]*bintree{}},
			"script.html": &bintree{tmplLogScriptHtml, map[string]*bintree{}},
		}},
		"parameter": &bintree{nil, map[string]*bintree{
			"body.html": &bintree{tmplParameterBodyHtml, map[string]*bintree{}},
			"menu.html": &bintree{tmplParameterMenuHtml, map[string]*bintree{}},
			"script.html": &bintree{tmplParameterScriptHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

