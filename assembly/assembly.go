// Code generated by go-bindata.
// sources:
// tmpl/bloomsky.html
// tmpl/bloomsky.txt
// tmpl/bloomsky_body.html
// tmpl/bloomsky_header.html
// tmpl/graph_body.html
// tmpl/graph_header.html
// tmpl/log_body.html
// tmpl/log_header.html
// lang/en-us.all.json
// lang/fr.all.json
// test/configForTest.yaml
// DO NOT EDIT!

package assembly

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _tmplBloomskyHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\xc1\x0d\xc2\x30\x10\x44\xd1\xfb\x56\x31\x72\x01\xd0\x80\x95\x5e\x12\x3c\x28\x08\xdb\x8b\x60\x2f\xd1\x6a\x7b\x47\xc6\x1c\x73\x1d\xbd\xd1\x77\x47\xe1\xfd\xd1\x89\xb4\x55\xd5\xf6\x79\x1e\x09\x11\x92\x77\x6b\x75\x11\xc9\x3b\xd7\xb2\x08\x00\xb8\xc3\xd8\x5e\x75\x35\x22\x8d\x99\xef\x74\x19\xf4\x3a\x8d\xe4\x4d\xcb\x71\x62\x6f\xda\x8d\xdd\xfe\x78\xa2\xf1\xfa\x15\xdc\xc1\x5e\x10\xf1\x0d\x00\x00\xff\xff\x76\x78\x3f\x4b\x8a\x00\x00\x00")

func tmplBloomskyHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplBloomskyHtml,
		"tmpl/bloomsky.html",
	)
}

func tmplBloomskyHtml() (*asset, error) {
	bytes, err := tmplBloomskyHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/bloomsky.html", size: 138, mode: os.FileMode(420), modTime: time.Unix(1498743877, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplBloomskyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\x4b\x8e\xa3\x30\x14\x45\xe7\x59\xc5\x53\xa4\x1e\x76\x2f\xa0\x87\x0d\x22\x20\x75\x3e\xca\xaf\xc7\x4e\x78\x09\x56\x63\x40\xd8\x54\x55\x84\xde\x9e\x6a\x0d\xb5\xb2\x92\x31\x9f\x10\x3b\x89\xaa\x98\xde\x73\xee\x7d\x10\x29\x3f\x5d\xcf\xe4\x4f\x9a\xe7\x42\xfe\xbf\x40\x5d\xff\x9a\xa1\xfa\xcb\xa4\xf2\x58\x9a\x12\x4d\xdc\x7c\x5d\x6f\x61\xba\xe5\x02\xa5\x62\xa2\x80\x43\xab\x4f\x89\xe0\x37\xb8\x1e\xd3\xab\x8d\x8d\x36\x88\x4c\x85\xc7\xd5\x03\x69\x10\x35\xd7\x39\x3e\xbe\xf0\x23\x42\x14\xbb\x45\x23\x18\x28\xf2\x3b\x69\x51\x89\x03\x96\xb0\x3c\x41\x90\xa7\x69\xfe\x8a\xa5\xbc\xd5\x8d\xb8\xa8\xc4\xf2\xd4\x33\x9d\x1e\x65\x31\xbe\xc1\x6e\xff\xe0\x56\xa3\x37\xe0\x6e\xdf\xcf\xf2\x73\xa2\x1e\xbf\xa0\x16\x23\xd9\x80\x9d\xf5\x8f\x67\x31\xf8\xbc\xc4\xa3\xe2\x79\x66\xeb\x66\x4a\x53\x3d\x34\x52\x67\x95\x74\x8f\x0e\xa2\x46\xe6\x45\x42\x04\xf3\x22\x31\xea\xa6\x92\x8a\xf1\x0c\x63\xd0\xc0\xb5\x6f\xb4\x3e\xd7\xf1\xa6\x40\x8c\x6f\x0a\xbe\xb4\x2d\xb5\x29\xbf\xbd\x7c\xad\xaf\x19\x77\x7c\x24\xfb\x1b\x6b\x8e\x08\x06\x09\x7c\xc6\xd3\x8b\xbd\xa7\xb3\x26\x8a\x34\xcf\xb3\xbb\x33\x03\x6e\x91\xb0\x66\x0a\xc7\xf8\x40\xeb\xcc\x36\xac\x6b\x6e\xcf\x99\x0b\x22\x10\xe2\xc9\x5b\x0f\x92\xc5\x3b\x8e\xb2\x0f\x1b\x59\x5b\x14\x05\x96\x4c\x55\x65\xe3\x05\xd3\x7b\x7b\x57\x60\xc0\x92\x12\xb3\x04\xb9\x22\x82\x8f\xf7\xc0\xd9\xe4\xb9\x7e\x2e\xab\xca\xc3\x54\xf2\x4a\x36\x3d\x9e\xe9\x09\x2b\xc1\xe3\x27\x7f\x1b\xa6\xa7\x23\x89\xe0\x87\x71\x57\x25\x4a\xd9\x1e\x10\x65\xe1\xb9\x2d\x30\x78\x17\xea\xa0\xcd\x6d\x2b\x5c\xb1\x6e\x75\x6c\x85\x2b\x66\xe2\xc9\x67\x00\x00\x00\xff\xff\x01\x56\xa6\x84\x62\x05\x00\x00")

func tmplBloomskyTxtBytes() ([]byte, error) {
	return bindataRead(
		_tmplBloomskyTxt,
		"tmpl/bloomsky.txt",
	)
}

func tmplBloomskyTxt() (*asset, error) {
	bytes, err := tmplBloomskyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/bloomsky.txt", size: 1378, mode: os.FileMode(420), modTime: time.Unix(1498741853, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplBloomsky_bodyHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x99\x4f\x73\xdb\xb6\x12\xc0\xef\xfa\x14\x78\xc8\xbc\x77\xa3\x68\x5b\xce\x3b\xb4\x92\x0e\x89\xa7\x49\x3a\x99\x36\x93\xb8\xe9\xf4\xd4\x59\x11\x2b\x12\x31\xfe\x05\x58\x4a\x71\x3d\xfa\xee\x1d\x82\xa2\xfe\xd0\xb2\x52\xd9\xb4\x63\xa7\x07\x5b\x24\xb0\xd8\x5d\xfc\x76\x01\x90\xcb\xab\x2b\x81\x53\x69\x90\xf1\xcc\x1a\x42\x43\x7c\xb1\xe8\xf5\x86\x06\x66\x2c\x53\x10\xc2\x88\x1b\x98\x4d\xc0\xb3\xfa\x27\x91\x66\x86\x3e\x60\x73\x3b\x95\x5f\x50\x24\x64\x1d\x1f\xf7\x18\x63\x6c\x28\xe4\x6a\x60\xa5\x10\xa4\x41\xbf\xec\x6b\xf7\x2f\x55\x14\x08\x62\x4b\x26\xca\x4d\x4a\x22\x6b\x18\x5d\x3a\x1c\xf1\xfa\x86\xb7\x06\x92\xcd\x73\x85\x2c\xb3\x4a\x81\x0b\x28\x38\x13\x40\xb0\x6c\xae\xcc\xd7\xed\x4d\x33\xf8\x1c\x69\xc4\x9f\xd5\xa3\x39\x03\x2f\x21\xc1\x2f\x0e\x8c\x40\x31\xe2\x53\x50\x95\x6c\x6c\xad\x3c\xf7\x56\xad\x4c\xb5\x9d\x0b\x0e\x4c\xe3\x4c\xf0\x89\x35\xea\x92\x8f\xcf\x6b\x77\x0c\xcc\x64\x0e\x24\xad\x19\xa6\x95\xdc\x9e\xa1\x32\xb3\x26\x89\xea\x1f\x4a\x74\x98\xd6\x28\x5b\xc3\xa1\x45\x76\xe2\xc1\x08\xce\x0a\x8f\xd3\x11\x7f\xc6\xc7\x2f\x94\xb5\x3a\x5c\x5c\x0e\x53\xd8\x08\x65\x2a\xe4\xac\x15\x59\x29\x56\xc8\xd6\x59\x50\x87\xa1\xc9\x98\x55\x58\x5a\x3e\x94\x6a\xc3\x89\x46\xd8\xc0\xac\x25\x17\x65\x95\x6c\x64\x21\x23\x39\x43\x3e\x1e\xc2\xd2\xdb\x94\x8f\xaf\xae\xce\x19\x7f\x6d\x35\xf2\xc5\xa2\xf2\x78\x98\x2a\xb9\x53\xc9\xc6\x28\x65\x73\x3e\x7e\x6b\xf3\xfd\xf2\x6c\x3d\x20\xf7\xe0\x8a\xc6\x96\x0c\x64\xfd\xe5\x3f\x37\x57\x10\xb9\xf0\x43\x9a\xe6\x92\x8a\x72\xd2\xcf\xac\x4e\x1d\x90\x97\xd9\x05\x28\x69\xd2\xc9\x12\x77\x92\x29\x89\x86\x92\xdc\x72\xd6\xa4\xef\x9f\x13\x05\xe6\x82\x8f\x5f\xc5\xa1\x07\xda\x13\x10\x8a\x89\x05\x2f\xfa\x8d\x89\x68\xfb\xba\xf6\x26\xe0\xec\xac\x19\xb1\xb6\xb4\x1d\xb6\xb4\x54\x3b\x53\x62\x79\x39\x4c\x0d\x54\x3f\xff\x49\x92\xb4\x6f\x60\xb6\x0a\x3f\x4b\x92\x71\xaf\xb7\x6f\xbb\xd8\xec\xf3\x76\x7e\xc3\x26\x92\x59\x95\x68\x91\x0c\xda\xe9\x24\x75\xce\x82\xcf\x46\x3c\x0d\x04\x24\xb3\x15\xd4\xbe\x33\x39\x67\x73\x29\xa8\x18\xfd\xff\xe8\xbf\xad\x61\xae\xd1\xab\x10\xc4\x32\xbc\x2b\x18\x75\x38\x98\x34\xec\x95\x8d\xc1\x76\xad\xd1\xcd\x12\x20\xa9\x31\x10\x68\x57\xad\xc1\xad\x55\xb2\xed\x1b\x67\xa0\x68\xb4\x36\x20\x75\xce\xa3\x82\xe8\xac\xd4\xf9\x11\x67\x05\xca\xbc\xa0\x11\x3f\x39\x3a\x6a\xdc\x8e\xd7\x37\x2f\xc4\xc8\xba\x72\x45\x8b\x41\x8d\x79\x0f\xb8\xe7\xbc\x1d\xd1\x89\x6f\xb7\x34\xd3\xb2\x25\xb9\x92\xf8\xb8\xb1\xb8\x2d\x45\x30\xa9\x76\xe3\x5a\x7b\x7d\x13\xff\x27\x81\xbc\x74\x28\x76\x2d\x64\xf2\xd7\x1b\xeb\x0e\x31\xde\xda\xd4\x72\x75\xe9\x8a\x6a\x67\x63\xab\xab\x44\x83\x4b\x34\xf8\x0b\x5c\x6f\x75\x2c\x06\xec\xa5\xa4\x7a\x31\x92\xb8\x59\xfd\xce\x8e\xad\xe9\x66\x95\x9a\x5d\x01\x5c\x83\xbf\x95\x81\xff\x99\x49\x70\x3f\x1e\xa0\x71\x98\xee\xe2\xb4\x17\xde\xd7\x67\x67\xaa\xb4\x7a\x14\xd3\xeb\x5e\xe3\x2d\x80\x0d\x57\x47\xca\x5c\xb2\xb9\x4c\x42\x69\x02\x46\x3e\x72\x99\x55\x6f\x8c\xc0\x2f\xec\xb7\x8f\x7c\xb1\xb8\xed\x44\x56\xf0\xcb\xd9\xa3\x20\xdf\x05\x27\x0d\x4a\x25\x99\x87\x29\x25\x20\x66\x32\x54\x07\xe1\x06\xb5\xdf\xa5\x11\xec\x4c\x7a\xcc\xaa\x47\xa2\x0e\x56\xe5\x5c\x1a\x21\xa4\xff\x57\xf1\x7b\x55\x06\xea\x08\x5d\x5e\xa9\xba\x07\x76\x9b\x46\x2a\x1b\x3a\xec\xb5\xb2\x6b\xc8\x85\x2e\x6e\xe1\xd9\x03\xc4\xe0\x43\x19\xe2\x93\x89\x60\x55\x34\x3a\x08\x44\x28\x03\x55\xc1\xb8\xd7\x40\x34\x46\x0e\x89\x44\x33\xe6\x9b\x85\xc2\x83\x34\xc2\x5b\xb7\x89\xff\x3d\xc8\x2e\x36\x8e\x4a\xf5\xf7\xb2\x6b\xdc\x84\x89\x9d\x81\x54\x5d\x3c\xfb\x44\x03\x51\xd7\x7d\xa6\xe8\xca\x8a\xd6\x8f\x2b\xdd\xd8\x7b\x20\x64\x6f\x21\x10\x2b\x6c\xe9\x3b\x02\xea\x81\xf0\xde\x79\x56\x46\xbe\x15\x4e\x2a\xd0\x6b\xab\x91\xea\x47\xf2\x86\xe8\x39\x6a\x87\x1e\xa8\xf4\xd8\x01\x49\x42\xed\xa6\xf7\x8a\xb1\xb2\x90\x7d\x1b\x82\x45\xa9\xa5\x58\xbe\x77\x34\xf8\x5e\x37\x6d\x8b\x05\x8b\x65\x82\x8b\xec\xae\x33\xdc\x34\xf3\x3d\xec\x87\x13\xf0\xd7\xd3\xee\x9d\xc7\x10\xba\xc9\x39\xb7\x54\x25\x4d\x91\xdf\x6b\xea\x35\x86\x0a\x07\x0f\x94\x80\x5f\x7b\xcb\xc6\xcf\x25\x28\xf9\xd7\xe6\x4b\xf6\x47\xab\x08\x72\xbc\xeb\x5c\x67\xb5\x9a\x27\x9b\x83\x5f\x23\x97\x2b\x3b\xc1\x56\x69\xe2\x97\x52\x4f\xd0\xb3\x5f\xa7\xec\x27\xab\x94\x9d\xa3\x0f\x1d\xa4\xe7\x74\xa5\xeb\x3b\x65\xb9\x41\x35\xb3\x79\x8b\xe9\x19\xce\x64\x86\xec\x4d\x17\x4f\xe6\x22\xea\x7a\xa4\x18\x87\x69\x2c\xa8\xed\x2a\xd8\xed\x9c\x8c\xc7\xa9\xc7\x50\x90\xd4\xeb\x19\x6d\x14\x03\xef\x52\x36\x3c\x6d\xd7\x5b\x3b\xad\xfe\xb5\x67\x74\x6d\x66\x53\xeb\x35\x10\xa1\x38\x97\x1a\x9f\xef\x0f\xd7\x4c\x0a\xb4\xf5\x86\x23\xc5\xba\x86\x3a\x38\xd9\x2c\xae\x9e\x1e\x71\xd6\x7c\xf5\x61\xca\xda\x58\xd9\x1d\x06\x5b\xfa\x0c\x9b\x5a\xed\xaa\x30\x5b\xeb\xa9\x3f\x4d\x45\xed\xa9\x76\xa7\x7c\xfc\x87\x2d\x3d\x9b\x78\x3b\x0f\xe8\x99\xb0\x18\x98\xb1\xc4\x42\xe9\x9c\xf5\xc4\xa8\x40\x56\xbb\x42\x90\xf7\x7b\xc3\x34\xde\xdc\x7d\xf5\x1c\xc6\xea\xf4\x00\x56\xc7\x1d\xb1\x3a\x7e\xa2\xac\x06\x07\xb0\x3a\xe9\x88\xd5\xc9\x13\x65\x75\x72\x00\xab\x41\x47\xac\x06\x4f\x94\xd5\xf1\x01\xac\x4e\x3b\x62\x75\xfa\x80\xac\xd6\xc7\xd4\xbe\xb3\x86\x6d\x1f\x36\x2d\xa9\xa5\x84\xb7\xf3\xd8\xdb\x7c\x4d\xac\x5b\x57\x5f\x0a\xeb\x63\xaa\x77\xed\xb5\xe6\x65\x01\x9e\x38\x4b\xc7\x1b\x7d\xb4\x7e\x09\xdd\xec\xae\x34\xbe\xb0\x96\x02\x79\x70\x2c\xb3\x1e\xd9\xcf\x30\x83\x0f\x99\x97\x8e\x76\x06\x68\x34\x1a\xdd\xd4\x7e\x87\xbf\x7a\x9a\x95\x37\xef\x14\x64\x28\x18\xd4\x21\x40\x23\x98\x9d\xc6\x4b\x61\xb3\x52\xa3\x21\x16\x6c\xbc\x77\x90\x63\x15\x7c\x10\x6c\x0a\x81\x96\x38\x86\x21\xba\xbe\xfd\xf1\xf3\x53\x48\x3f\x7d\x2e\xd1\x5f\x26\x83\xfe\x49\xff\xb8\xaf\xa5\xe9\x7f\x0a\xbc\x02\x5b\x8b\x8f\x7b\x57\x57\xd1\xd6\x62\xf1\x77\x00\x00\x00\xff\xff\x2a\x85\xc2\x98\x12\x22\x00\x00")

func tmplBloomsky_bodyHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplBloomsky_bodyHtml,
		"tmpl/bloomsky_body.html",
	)
}

func tmplBloomsky_bodyHtml() (*asset, error) {
	bytes, err := tmplBloomsky_bodyHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/bloomsky_body.html", size: 8722, mode: os.FileMode(420), modTime: time.Unix(1498831025, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplBloomsky_headerHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5b\x5d\x73\xda\x48\xd6\xbe\xf7\xaf\x38\xab\x1b\xec\x44\x7c\x0a\xb0\xe3\x18\xd7\x66\x6c\xcf\x8c\xa7\x12\x27\x65\x32\x93\xdd\xf2\xba\xde\x6a\xa4\x03\xea\x58\xea\xd6\x76\xb7\x20\xbc\x2e\xfe\xfb\x56\xb7\x24\x10\x20\x01\xfe\x60\x2a\x5c\xa9\xd1\x39\xcf\x79\xce\x67\x4b\x20\x3d\x3e\x7a\x38\xa4\x0c\xc1\xf2\x91\x78\x28\xac\xd9\xec\x00\x00\xe0\x2c\x44\x45\xc0\xf5\x89\x90\xa8\x7a\x56\xac\x86\xd5\x13\xeb\x3c\x77\xca\x57\x2a\xaa\xe2\x7f\x63\x3a\xee\x59\xff\xaa\xfe\xf9\xa1\x7a\xc1\xc3\x88\x28\x3a\x08\xd0\x02\x97\x33\x85\x4c\xf5\xac\xeb\xab\x1e\x7a\x23\x5c\xd2\x64\x24\xc4\x9e\x35\xa6\x38\x89\xb8\x50\x39\xe1\x09\xf5\x94\xdf\xf3\x70\x4c\x5d\xac\x9a\x85\x0d\x94\x51\x45\x49\x50\x95\x2e\x09\xb0\xd7\xcc\x80\xfe\x51\xad\xc2\x57\x1f\x81\x0c\xf8\x18\xc1\x01\x03\xac\xc8\x48\xc2\x9b\x30\x96\xea\x0d\xb8\x3c\x44\x18\x52\x21\x15\x50\x06\xca\x47\xd0\xfe\xbd\x07\xc2\xa6\xc0\x95\x8f\xc2\xac\x33\xdb\xa0\x95\x12\x9d\x37\x64\xa8\x50\xbc\xd1\x2a\x12\x13\xc8\x6a\x75\x9d\xbe\x87\xd2\x15\x34\x52\x94\xb3\x9c\x07\xbf\x04\x9c\x87\xf2\x61\x0a\x6e\x40\x35\xec\x88\x17\x78\x4e\x62\xe5\x73\x91\xd3\x8a\x88\x12\xd4\x7d\x20\x01\x65\xff\x1c\x85\x84\x06\x35\x97\x87\xd6\xf9\x41\xa2\xa9\xa8\x0a\xf0\x7c\x15\xf9\x37\x7e\x56\x4f\xce\x1c\x2c\x22\xf2\x91\x28\x4c\xfc\x88\x68\x80\x1e\x10\xe6\x41\x48\x19\x1d\x52\xf4\xe0\xa2\xdf\x5f\x78\x12\x50\xf6\x00\x02\x83\x9e\x25\xd5\x34\x40\xe9\x23\x2a\x0b\x7c\x81\xc3\x9e\x55\x97\x8a\x28\xea\xd6\x5d\x29\xeb\x03\xce\x95\x54\x82\x44\xb5\x90\xb2\x9a\x2b\xa5\x05\xae\xe0\x52\x72\x41\x47\x94\xf5\x2c\xc2\x38\x9b\x86\x3c\x96\xd6\x06\x60\xd8\x88\x5c\x55\x3e\x86\xf8\xea\xf8\x13\x24\x3a\xcd\x55\xea\x72\x26\xe7\xe8\x2f\x42\xa9\x4e\x28\xf3\x72\x50\x07\x69\xe8\x93\x4a\x00\x29\xdc\x85\xf2\x77\x59\xff\xfe\xdf\x18\xc5\xb4\xea\xd4\x5a\xb5\xa6\xd1\xfa\x5e\xea\x1d\x58\xe7\x67\xf5\x04\x66\xe7\x7c\xfe\x41\xc6\xa4\x9f\x58\x9e\xa7\xb5\x84\xc9\x72\x16\xbf\x4b\x78\x02\x0f\x13\xa0\x04\x5e\x7f\x06\xdc\x9b\xc2\xe3\x7c\xa9\x3f\x11\xf1\x3c\xca\x46\x55\xc5\xa3\x53\xe8\x34\xa2\x1f\xef\xe7\xa7\x67\xf3\xa3\xf9\x41\x4d\x2a\x22\x14\x8a\xaa\xc2\x30\x0a\x88\xc2\x62\xb4\x53\x68\x37\xa2\x1f\xd0\xec\xe4\xe1\xf4\x47\xe1\x0f\x55\x25\x01\x1d\xb1\x53\x70\x91\x29\x14\x1b\xcd\xd1\xa1\x20\xe1\xaa\x8d\x01\x17\x1e\x8a\x53\x60\x9c\xe1\xaa\xf6\x59\x3d\xf5\x38\x97\x87\xdf\xbf\x7e\xfa\xd8\x01\xe9\xd3\xd0\xa4\xe0\x16\x65\xc4\x99\xa7\x03\x39\xe4\x02\xae\xaf\x4e\x40\xc6\x91\x1e\x66\xc0\x87\xa9\x30\x06\x18\x22\x53\x32\xc9\x19\x7a\x94\x80\x2e\x07\x8a\xb9\x71\xa2\xa1\xbf\x7d\xb8\xbd\xb9\xbe\xf9\xed\x34\x0f\xea\x71\x94\xac\xa2\x60\xc2\xc5\x03\xd0\x21\x4c\x79\x0c\x7a\x5c\x9a\x31\x16\x91\x11\xc2\x98\x12\x18\xd2\x00\x4f\xeb\xf5\x25\xb8\x3b\x3a\x84\x40\xc1\xf5\x15\xbc\xbb\xcf\x72\xb6\x54\x14\x7a\x6a\xcb\xd3\x7a\x9d\x4b\x59\x0b\xc9\x0f\xd7\x63\x7a\xd6\xd4\x7d\x15\x06\x1d\xe9\xd3\x71\xdd\xa9\x1d\xd7\x9c\xc5\x7a\x5e\x30\xb9\xba\xd8\x1d\x56\x24\x3e\xd5\x9b\xb5\x76\xad\x95\xad\xca\x20\xcf\xfe\x71\x87\xcc\xa3\xc3\x7b\xed\x50\xbe\x9c\x17\xc5\xa7\xfb\x8f\x4f\x6a\xc4\xf3\xae\xc6\xc8\xd4\x47\x2a\x15\x32\x14\x87\x56\xc0\x89\x67\xd9\x30\x8c\x99\xab\x27\xf2\x21\x8e\xd5\xd1\x4a\xce\xc7\x44\x00\x8f\x55\x14\x2b\xe8\x81\xc7\xdd\x58\xa7\xa7\x36\x42\x75\x95\x64\xea\x97\xe9\xb5\x77\x68\x25\x12\xd6\xd1\xfb\x35\xdd\x89\x5c\xff\x2e\x12\x94\x69\xb8\xb9\xdd\x10\xa5\x24\x23\x5c\xb5\x9d\xc9\x7b\x79\xd3\xae\x40\xa2\x30\xb5\x7e\x68\x79\x74\xbc\x6a\x56\x7f\xbc\x1a\x65\x0c\x85\x2e\x2a\xe8\x41\x8a\xbf\x2e\x96\xf0\xae\x91\x28\x42\xe6\x5d\xf8\x34\xf0\x0e\xbd\x15\xb4\xd9\xf2\x52\x72\xf7\x01\x35\x79\x86\x13\xf8\x86\x83\xbe\x59\x1f\x5a\x8f\x8f\xb5\x6f\x38\x30\x67\x45\x2c\x82\xd9\x6c\x95\x55\xbd\xfe\xf9\x06\x3e\x7f\xb9\xba\x29\x80\xab\x71\xc6\x23\x64\xf9\x90\x14\xa4\x62\x81\x94\x44\xf0\xd0\xd2\x70\x45\xde\x27\x52\x89\x50\x6a\x21\x12\x5c\x71\x97\x07\x47\xbb\x08\x0b\x24\xde\xb4\xaf\x88\xc2\x9d\xc4\x63\x51\x02\x9b\x9e\x97\xc8\x74\x8d\x44\xc8\xac\x75\xb9\xd9\xda\x37\xf5\x3a\x7c\xbe\x81\xab\xdb\xdb\xcf\xb7\xc5\xb1\x42\x21\xb8\x58\x0a\x96\xfe\xa2\x28\x5c\x7a\xfb\xe1\x01\xd6\x8c\x40\x2a\xb6\x1e\xae\xc4\x99\xa2\xb3\x85\xc9\xaf\x71\xe6\x06\x5c\xe2\x0e\xe9\x4a\xf3\x74\x36\x38\xbf\xe0\x8c\xa1\x91\x05\xa3\xec\xd5\xce\xea\x83\xf3\xd5\xe4\xcd\x56\x6b\x46\x47\xe2\xd3\x55\xbf\xff\xe1\xb7\xab\x62\x26\x69\x69\xef\xc0\x45\x77\x92\x1b\x0b\x81\x4c\x79\x7a\xff\x48\x4a\xf8\x92\x28\x3c\x2c\x88\x89\xe9\x3b\xa2\x50\xd1\x50\x8b\x56\x1e\x1f\xbf\x82\xf5\x91\x48\x05\xfd\x29\x73\xad\xd9\xec\x14\x2a\xf0\x36\x0f\xa8\x87\x42\x82\x06\x6f\xc1\xaa\x5b\xf0\xb6\xb0\x26\x0e\x57\x54\x3e\x71\xa6\x7c\xa3\xd3\xdc\xac\xb8\xa2\xf7\x6b\x1c\x04\xff\x46\x22\x12\x73\xf0\x4f\xd8\x51\xef\x77\x1e\x0b\x99\x28\x9d\xee\xa8\xf2\x89\xb2\x58\xe1\x13\x95\xfa\xe8\x72\xe6\xc9\xa2\xd8\x96\x8e\x51\x81\x43\x81\xd2\xd7\x31\xb7\x8e\x96\x26\x58\x96\x8a\x75\xb0\x82\xf6\xf9\xca\x41\xfa\x3c\xd9\xf7\x3c\xa2\x48\x91\x4c\x5a\x99\x69\x6d\x15\x0d\x91\x7a\x3d\xeb\x9e\x80\x8f\x74\x51\xd5\x34\xd6\x7a\x03\x17\x96\xce\x77\xc9\xf5\x38\xfb\xa3\xff\xf9\xa6\x16\xe9\x9b\xa1\x05\x40\x91\x25\x18\xc4\x34\xf0\x8c\x97\x85\x70\x24\x5f\xad\x1a\xbb\x76\x49\x14\xa9\x7d\xed\xc3\x1b\x68\x36\x1a\x8d\x92\x02\x0e\x75\x6d\x49\xe8\xc1\x5d\x52\xbf\x7f\x10\x66\xcd\x66\x15\x3b\x2d\xe7\x5f\x71\x90\x5f\x7e\x22\x22\xbf\xfc\x10\x89\xe5\xb3\xd3\xfc\xf2\x8f\x98\x2d\x2f\x83\x25\xdd\x78\x94\x5f\xf6\x31\xca\x2f\x3f\xbb\x2a\xbf\xbc\xe1\xe3\xfc\xf2\x12\x75\x7b\x55\xee\x8b\x5d\x9a\x22\xd1\xa3\x8f\x2c\xb7\xc0\x06\xf7\xf5\xf6\x67\xc2\x70\x47\x72\xed\x56\x82\x9e\x0e\x06\xb2\xe8\xe5\x62\x39\x9f\xc7\x73\x16\x69\x43\x95\x50\xa0\x2c\x93\x9b\x77\x51\xb1\xa4\x44\x37\x93\xdc\xd0\x3a\x5a\x72\xc8\x45\x48\x94\x42\xef\x2b\x0d\xb1\x91\x36\x07\xbc\x85\x8a\x99\x48\x89\xd3\xd9\xca\x84\x2b\x5b\x18\xd6\x6f\xa1\x72\x6a\xe4\x28\x9b\x1f\x4b\x74\x77\x30\xd5\xcc\x4c\x55\xa1\xb9\xc1\xdc\x13\xfa\x7d\x19\x7e\xa5\xe5\x97\x4f\xee\xc0\xaf\xb5\xe0\xd7\xda\x03\xbf\xd6\x26\x7e\xad\x1d\xf8\x39\x0b\x7e\xce\x1e\xf8\x39\x9b\xf8\x39\x3b\xf0\x6b\x2f\xf8\xb5\xf7\xc0\xaf\xbd\x89\x5f\x7b\x07\x7e\x9d\x05\xbf\xce\x1e\xf8\x75\x36\xf1\xeb\xbc\x3f\xd8\x1d\x56\x6f\x54\x52\x91\x30\xda\x84\xd8\xd8\x61\x2b\x2b\xb5\xe0\x52\x35\x5d\x01\x37\xbb\xc2\x05\x55\xd3\x1b\x52\xb4\x4d\x96\x42\x25\xbf\x9b\x15\x81\x5d\x9a\x33\xd7\x97\x4f\x0a\x68\x10\xf0\x09\x0a\x59\x84\x77\x13\x87\x9f\x87\xbf\x66\x12\x26\x67\x66\xe0\x2f\x94\x66\xb3\x4a\x41\x9c\xe9\x10\x72\x7b\xde\x0d\x1d\xf9\xa5\xb7\x06\xa5\xc4\x98\xd6\x5a\x21\x55\x39\xa3\xe0\x06\x44\xca\xde\x7f\xac\x09\x85\x09\xad\x86\x9c\xb3\xea\x84\x30\xca\x46\x55\x57\xa0\x74\x91\xa9\xaa\xf3\x1f\x7d\xcb\x49\xcf\x13\xb2\xc6\xbc\x26\xba\x7e\x21\x0f\x18\xc8\xd5\x9f\x0c\x5e\x89\x98\x47\xa6\x55\x19\x33\x36\x5d\xe2\x72\x99\x6c\xc9\xeb\x4c\xd6\x33\x36\x8f\x61\x5f\x71\x11\xd6\xfe\xfc\xeb\x9a\x79\xf8\x03\xce\x7a\xd0\x7a\x72\x2c\xe3\x71\x51\x76\x97\x81\xdf\x42\xa5\xde\x6c\x26\x34\x03\x3e\xd1\x34\xcd\x65\xea\x9a\x67\x6e\xc0\x63\x2f\x73\xcb\x2a\x09\xea\x13\xdc\x69\xef\xdd\x9d\x10\x3d\x1a\x87\xe5\x1e\xe9\x5c\xed\xe4\xd5\xbe\x89\xfa\x74\xe4\x6f\xa6\x99\x2f\xa9\x02\x96\x9b\x7a\x31\x31\xfb\x8d\x32\xef\x92\x8a\xf4\xc6\xae\xd7\x03\xeb\xc6\x7a\x72\x02\x26\x94\x79\x1e\x15\xab\x4d\x90\x5e\x1b\x0a\xa5\x9d\x80\x75\x07\xb4\x1a\x28\x3e\x21\xc2\x93\xd5\x46\xd5\xc3\x51\xea\x49\x59\x6b\x3e\xc3\x99\xab\x3d\x79\x63\x56\x57\x52\x0f\x92\x2d\x8e\xb5\x3b\x7b\xf1\xec\x95\x1d\xdb\xc9\x95\x77\xfb\x49\x52\xff\x95\x7d\xe9\xf3\x78\x2d\x49\x9b\x1d\x6b\x3a\xfb\x49\x52\x7f\x4f\x8e\x6d\xf1\xe6\x64\x4f\x79\xfa\xb6\xcf\x3c\x7d\xc3\x5d\x4a\xb0\xd5\xda\x4f\xa6\x5e\xd9\xb5\x1d\x9d\x39\xde\xd3\xd4\x7b\x65\x6f\x96\xa7\xde\x6e\xbe\x39\xcd\x2d\x89\xda\xbe\x37\xf5\x63\xa9\x08\x65\xe8\x69\x0f\xfb\x11\xa2\xa7\xaf\x0f\x9a\x4f\x76\x4d\xc6\x52\x69\x6e\xe5\x9b\x6f\x81\x25\xbd\xe5\x86\x51\xdd\xb7\x8a\x37\x5f\x8d\x57\x1d\x20\x89\x87\x5c\xa8\x6a\xa3\x74\x0b\xde\x1a\xf3\x51\x2c\x57\xaf\x1e\x57\x72\xfb\x5b\x2c\xd5\x33\xe9\x14\xff\xb0\xbe\x89\x8f\xa6\x13\x16\x5e\xfc\x2f\x13\x0a\x65\x42\xa9\x2e\xff\x0e\x46\x0f\xa1\xbf\x9d\xd2\x43\xe8\x1b\x2a\x0f\xe1\x9e\xc3\x94\xd5\xd3\xa6\x38\xad\x57\xd4\xdf\x14\xb1\x8c\xdc\xc6\x90\xad\xb3\x7b\xcd\xe0\xed\x36\xb6\x8a\xbb\xdb\xf9\x09\xbb\xbb\xf9\xfc\xe2\xdd\x4b\x7b\xbf\x80\xcf\x9e\xda\xfb\x85\x8c\xf6\xd3\xde\xcf\x25\xf5\xb7\xb4\xf7\x4b\xc9\xed\xbb\xbd\x37\xf0\x7b\x49\x7b\x1f\xff\x84\xed\xdd\xfa\xb9\x36\xef\xd6\x4f\xd7\xdd\x2f\x64\xb4\x9f\xee\x7e\x2e\xa9\xbf\xa5\xbb\x5f\x4a\x6e\xdf\xdd\xbd\x81\x9f\xbe\x2e\xdf\xd6\xdb\xb7\x84\x9a\x1b\x8d\xc6\x93\xbb\x59\x10\xca\x4a\x6e\x31\x0a\x6f\x29\x56\x7f\xe3\x7a\xad\x1f\x6d\x4b\x79\xfc\x1b\x65\x21\x91\x38\x1c\x08\x0c\x02\xf2\x63\xd3\x0d\xcd\x0e\x61\xbb\x24\x34\x98\x3e\x3f\x76\x9e\x56\x5f\x21\x6e\x55\x5f\xeb\xf7\xc9\x32\x0b\x85\x3e\xe8\x32\xa3\xac\xf0\x47\xc7\x5d\xe3\x10\x86\x2f\x8c\x44\x18\xee\x3f\x16\x6b\x36\x4a\x3c\x31\xf3\x21\x84\xb3\x81\x38\xd7\x3d\xb8\x41\x2a\xa8\x87\xad\xe7\xc6\xed\xd6\xfc\xbf\xfd\xdc\xa0\x09\xa2\x56\xff\x28\x7a\xdd\x88\x15\x18\x28\x72\xe0\x65\xb5\xa3\x21\x5e\x52\x3a\xc2\xe8\xef\x3d\x0e\xdb\x0a\x27\x75\x63\x73\xdd\xe4\x84\x4a\xcb\xe6\x09\xff\x6b\x62\x18\x0d\x0b\xff\x29\x34\x0f\xa3\x60\x18\xa1\x20\x2a\x16\x58\xbc\x89\x0c\x89\x2f\x90\xf9\x48\x55\xf9\xfe\xb1\xd1\xb6\xbb\x8b\xed\x8b\x92\xff\x99\x30\x90\x34\x96\x0b\xcb\xbb\x9b\xf6\xe3\x90\x7a\x25\x7f\xb8\x1a\xeb\xbf\xa7\x02\xc5\x96\x33\xf5\xe7\x98\x8e\x04\x4a\x19\x0b\xa4\xcc\x1f\x95\x9a\xff\x92\x0a\xa5\x7d\xf1\xfb\xe8\x29\x71\xcd\x2c\xf8\x11\xd9\x6a\xc0\x8f\x88\xb1\xe1\x7f\x21\x4f\xf2\x62\xcc\x03\x45\x46\xc5\xff\x31\x6b\xfc\xbf\x92\xf3\x49\x2d\xff\xf5\x24\xe8\x41\xc0\x79\x48\xc3\x51\xc3\x3a\xaa\x49\xe1\x2e\xc1\x5e\x87\x64\x84\x7f\xde\x7e\x2c\xc0\xab\xbf\xd9\x0e\xd9\x5c\x86\xfc\x22\x70\x4c\x71\x62\x40\x3f\x52\xa9\xee\x1a\x05\xcf\x10\x6d\x47\x6d\x6d\x41\x6d\x3e\x0b\xd5\xd9\x82\xda\x7a\x16\x6a\x7b\x0b\xaa\xf3\x2c\xd4\xce\x16\xd4\xf6\xfd\xfb\x37\xf5\xa7\x96\xc0\x98\x7a\x2b\x25\xf0\x17\xf5\x90\x97\x26\xaa\xbc\x56\x13\xa0\x80\x13\xef\x49\x8f\x2e\x66\x2c\x9a\x65\x2c\x8a\x12\xbb\x89\x45\xf3\x25\x2c\x5a\x65\x2c\x8a\x0a\x61\x13\x8b\xd6\x4b\x58\x38\x65\x2c\x8a\x0a\x67\x13\x0b\xe7\x25\x2c\xda\x65\x2c\xda\x4f\x64\xd1\x2e\x61\xb1\x78\x82\x7b\x96\x9e\xc9\xbd\x0c\x93\xac\xd3\x97\x1e\xd4\x34\xc2\x9e\xa5\xf0\x87\xaa\x7f\x27\x63\x92\x7c\x6b\x2d\xbf\x0b\x31\x99\x4c\x6a\xa3\xe4\x1d\x1c\xf3\x32\x84\xeb\x13\xa1\x64\x5d\x1b\x46\x51\xfb\x2e\xd7\x5e\xb5\xd9\x6e\xe0\xfc\x60\xc4\xf9\x28\xc0\x5a\x82\x95\x38\x51\x49\x9f\xd7\xad\xd8\xf0\x18\x11\xf7\x81\x8c\x50\x9e\xc2\x5d\xc5\xe5\x02\x8d\x5c\xc5\x86\x4a\x40\x19\x56\xee\xb5\x5b\xcb\x08\x12\xd5\x67\xf6\x91\x13\xef\x82\x04\xc1\x80\xb8\x0f\x87\x9e\x20\x93\x5f\x88\xa4\xee\xd1\xfb\x83\x83\xec\x51\x6c\x98\x7f\x7b\xa8\x2f\xb5\x52\xba\xe9\x83\x96\xd9\x33\xad\x29\xf2\x98\xca\x98\x04\xf4\xff\x89\x56\x34\x03\xfc\x2b\x19\x04\xb9\x27\x30\xb5\x4a\x8d\x78\xde\x05\x0f\xe2\x90\x1d\x56\x58\x1c\x0e\x50\x68\x96\xff\xaa\xec\x20\x94\xbb\x44\xd0\xe2\x2b\xf2\xb7\x7c\x22\x0f\xef\xe6\xf1\xbc\x6b\xd8\xd0\xb8\xb7\xf5\x51\xd3\x86\xa6\x39\xbc\x6b\xd9\xd0\x72\xcc\x91\x63\x43\xf3\xd8\x1c\xb5\x6d\x68\x9e\x98\xa3\x8e\x0d\xef\xee\xed\x05\x42\xd7\x86\x66\xd3\x9c\x39\xb6\xa1\x95\x48\x9f\xd8\xe0\x24\x08\xef\x6c\x68\x27\xa8\xcd\x86\x0d\x4e\xeb\xde\x86\xbb\x66\xd3\x06\xa7\x93\xc7\x68\xb6\x6c\x70\x1a\xe6\x9c\x93\x2a\xdc\x35\xdb\x36\xb4\x13\xf9\x8e\x0d\xed\x63\x73\xd4\xb5\xa1\xdd\x36\x47\xc7\x36\xb4\x4f\x96\x30\x4e\x6c\xe8\x24\xf2\xef\x6c\xe8\x18\xa9\x56\x23\xc3\x68\x35\x6d\xe8\x74\xcc\x51\xcb\x86\x4e\xd7\x1c\x39\x36\x74\x8e\xf3\x18\xad\xb6\x0d\x5d\x63\xbd\xd5\xb1\xa1\x93\x1c\x75\x33\xdc\xd6\xb1\x0d\x9d\xa6\x39\x3a\xb1\xa1\xfd\xce\x1c\x69\x5b\x4e\x1e\xc3\x69\x64\x96\x9c\x66\x86\xe6\xb4\x6c\xe8\x1a\x4d\x47\xdb\x34\x9a\x8e\xb6\x65\x70\x9d\x8e\x0d\xdd\xa5\x78\x38\xdd\xf9\x39\x6d\xf3\xc4\x1c\x9d\xcc\x71\xdf\x65\x68\xed\x86\x0d\x5d\xe3\x69\xbb\xb9\x8a\xd1\xd6\x36\x1d\x73\xce\xb1\xa1\x6b\x3c\x6e\x6b\x9b\x26\x92\x6d\x6d\xd3\xf0\x68\x77\xe7\x47\xc7\x36\x1c\x37\x96\x30\x4e\x6c\x38\x36\x3c\xda\xda\xa6\xe1\xd1\x69\x64\x68\x9d\xd4\x26\xdc\x75\x5a\x19\x6e\xc7\x59\xc5\xe8\xb4\x6d\x38\x36\x6c\x3b\x9d\x0c\xad\xd3\xb5\xe1\xd8\x70\xeb\x68\x9b\x09\xc6\x49\xa2\x09\x77\x9d\xd4\x56\xae\xc6\xe6\x7e\x76\xe7\x31\xed\xb6\x32\xeb\x5d\x27\xb3\xde\x6d\x67\x2c\xbb\xa9\x7f\x39\x8c\x6e\x86\xdf\x3d\xce\x78\x74\x4f\x32\xeb\xdd\x77\x36\x9c\x34\xee\x53\xf1\xfb\x45\xe3\x98\xf7\xa2\xcc\x7b\xac\x12\x7a\xb9\x7b\x1c\xff\xc3\x0f\x2a\x4f\x97\x6e\x7a\xcc\xfb\xa6\xa7\x50\xf9\x4a\x43\x5c\xfc\xf0\x31\x5b\x70\x18\x6f\xd0\xc9\x75\xed\xc1\xea\xc0\x9d\x2d\xb1\x31\xa3\x69\xd3\x4c\xf9\x48\x19\x5e\x68\xa1\xc3\xb2\x29\x5f\x51\xb9\xfb\x08\x33\x03\x8f\x16\x1e\x1b\xfc\x9a\x9e\x68\x87\x7a\x6a\xd8\x99\xfb\xe9\xec\x99\xad\x4e\xfe\x5d\x67\x73\x26\xb7\x65\x46\x2f\x6d\x39\xc5\x03\xfb\x7e\x6d\x23\x5a\xc7\x2d\x9e\xdc\xc6\xd9\xa3\xdc\x85\xf2\xd2\x04\x4f\x82\xb6\x7a\xb3\x5c\xaf\xc3\x65\xf2\x0e\xb8\xf2\x31\x8d\xbe\xe2\x30\x40\xa3\xc3\x6a\x4b\xc2\xcf\x9c\xf9\xc9\x67\x75\xa8\x4b\x25\x28\x1b\xe9\xa1\x9e\x26\xaf\xb2\x45\x61\xb1\x0b\x7c\x41\xe1\x22\xd3\x77\x1b\x65\x3a\x2b\x3b\x41\xf6\xb9\xab\x64\x77\x79\x15\x1b\x8e\xf3\x5d\xb8\x90\xf8\xbf\x8a\x0d\xad\xe6\xca\xa9\xfb\xa3\x95\xfb\x8f\x7a\x1d\xae\x99\x54\x84\x29\x4a\x14\x9a\x17\x3d\x75\xc0\x16\x51\x5c\x8f\xdc\xd6\xd2\xfe\x42\xb7\x55\x76\x76\x17\xba\x28\xeb\xbc\x91\xb5\xda\x66\x71\x10\x1c\x15\xbc\xe3\x9a\xbb\xac\x39\xab\xfb\x48\xbc\xf3\x83\x83\xc7\x47\x40\xe6\xc1\x6c\x76\xf0\xbf\x00\x00\x00\xff\xff\x41\x0d\x19\xf8\x16\x40\x00\x00")

func tmplBloomsky_headerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplBloomsky_headerHtml,
		"tmpl/bloomsky_header.html",
	)
}

func tmplBloomsky_headerHtml() (*asset, error) {
	bytes, err := tmplBloomsky_headerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/bloomsky_header.html", size: 16406, mode: os.FileMode(420), modTime: time.Unix(1498829517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplGraph_bodyHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x4d\x6f\xd4\x30\x10\xbd\xe7\x57\x4c\xdd\x73\x62\x15\x6e\x55\x92\x43\x41\x02\x21\x0e\x48\xf4\x8e\x26\xf6\x6c\xe2\xd6\x6b\x07\x7b\x12\x75\xb5\xda\xff\x8e\xf2\xd9\x36\xdd\x16\x21\x10\x87\x55\xe2\xc9\xcc\x7b\x6f\x66\xde\xfa\x78\xd4\xb4\x33\x8e\x40\x28\xef\x98\x1c\x8b\xd3\x29\x49\x72\x87\x3d\x28\x8b\x31\x16\xc2\x61\x5f\x61\x80\xe9\x91\x1a\xd7\x53\x88\xb4\x1c\x77\xe6\x81\x74\xca\xbe\x15\x65\x02\x00\x90\x6b\xb3\x16\x0e\x80\x68\x1c\x85\xf9\xdb\xf6\xfb\x0c\xd1\x10\xea\x67\x39\x63\x5e\xd5\x31\x7b\x07\x7c\x68\xa9\x10\xd3\x41\x6c\x0a\xd9\xd7\xb5\x25\x50\xde\x5a\x6c\x23\x69\x01\x1a\x19\xe7\xf0\x40\x3f\xc5\x97\x30\x86\x9a\xb8\x10\x97\x53\xb5\x00\x0c\x06\x53\x7a\x68\xd1\x69\xd2\x85\xd8\xa1\x1d\x72\xc7\xe8\xa0\x3c\x78\xbb\x52\x6d\xc5\xc5\x16\xdd\x22\x26\x86\xd4\x3b\x7b\x10\xe5\xed\x24\xc7\x61\x6f\x6a\x64\xe3\x5d\x2e\x87\xbc\x37\x4a\x8d\xf2\x2e\x1d\xe1\xff\x57\x6a\x2e\xa7\x51\x6e\xca\x71\x33\xd9\x2a\xa0\xd3\x02\x9a\x40\xbb\x42\x5c\x8a\xf2\xc6\x7a\xbf\x8f\xf7\x87\x5c\xe2\x93\x55\x4a\x6d\xfa\xcd\x66\x8d\x5e\x47\xf6\xe8\x82\x69\x0d\x8b\x63\xd6\xb5\x6c\x34\x74\xf6\x89\x88\x25\xd9\x61\xbf\xc9\x1b\x73\xad\x29\x73\x9c\xe5\x49\x51\x1e\x8f\xb7\x20\x3e\xfb\x3d\x89\xd3\x69\x90\x98\x4b\x6b\xce\x57\xbd\x08\xce\xed\xcf\x50\xd6\xd7\xa2\xfc\xea\xeb\x37\x41\x16\x99\xa8\xd8\xf4\xdb\x36\x5e\x62\xd6\x01\xdb\x66\xd1\x68\x22\xfb\x70\xf8\xad\xcc\xb5\xba\x61\x6e\xe3\xb5\x94\xb5\xe1\xa6\xab\x32\xe5\xf7\xb2\x45\x0e\x46\xdd\xa3\x35\x4e\x56\xf3\x5e\x52\x65\x0d\x39\x4e\x6b\x2f\x60\xf1\xf9\x8f\xca\xa2\xbb\x17\xe5\xa7\xb1\xf4\x0f\xf9\x34\xc6\xa6\xf2\x18\x74\xb6\x50\x8c\xdc\x2f\xd1\x17\x67\xc0\xc7\xa5\xe2\x91\xe9\xf9\x7e\x65\x67\xcf\x7a\x67\x7e\xcd\xa5\xc3\xe1\x71\x91\xa6\x32\x73\xd8\xaf\x3e\x81\x34\x2d\x93\xe4\xb5\x7b\x25\x99\x58\x72\xc6\xca\xd2\x13\x7c\x0e\x1b\x7b\xb1\x3e\xd3\xfa\x62\xd9\xa6\xdb\x1b\x6d\xf8\xf0\xa1\xc1\xc0\x02\x22\x1f\x86\x0b\xa4\xf2\x41\x53\xb8\x86\xab\xf6\x01\xa2\xb7\x46\xc3\xa5\x52\x6a\xf8\x5b\x3d\x33\xfe\xd4\xc4\x16\xff\x6d\x42\xa6\x7d\x4b\x01\xb9\x0b\xf4\x8f\x38\x73\xb9\xb4\x9c\xcb\x79\x18\xc9\x32\xda\x8b\x34\x05\x99\xad\x63\x9b\x27\x3a\x44\x6f\xbc\xe7\xc8\x01\x5b\x50\x3e\x10\x7c\xc1\x1e\xbf\xab\x60\x5a\x3e\x6b\xea\xa2\x28\x5e\x8b\xff\xc5\x6f\x94\x33\xaa\xf9\x66\x51\x91\x06\x64\xe0\x86\x80\x9c\x06\xbf\x1b\x5f\xb5\x57\xdd\x9e\x1c\x43\xf4\xe3\xb9\xc5\x9a\x22\x58\x8f\x1a\x76\x18\x79\x6e\x29\x8f\xa3\x74\x88\x41\x15\x42\x46\x46\x36\x4a\xde\x45\x79\xf7\xb3\xa3\x70\x48\xdf\x67\xef\xb2\xab\x6c\x6f\x5c\x76\x17\xc5\x60\xb8\x29\xbd\x4c\x8e\xc7\x91\xeb\x74\xfa\x15\x00\x00\xff\xff\xfe\x81\x43\xf5\x0c\x07\x00\x00")

func tmplGraph_bodyHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplGraph_bodyHtml,
		"tmpl/graph_body.html",
	)
}

func tmplGraph_bodyHtml() (*asset, error) {
	bytes, err := tmplGraph_bodyHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/graph_body.html", size: 1804, mode: os.FileMode(420), modTime: time.Unix(1498830999, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplGraph_headerHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\xef\x6f\xe3\x36\x12\xfd\xee\xbf\x62\xaa\x2f\x76\x16\x94\x64\xfd\xb4\xe3\x8d\x83\xdb\xa6\x8b\x36\x87\xbd\x5e\xb1\x9b\xc3\x15\x08\x82\x03\x2d\x8d\x6d\x26\x12\xa9\x92\x94\x1d\x5f\x90\xff\xfd\x40\xc9\x4e\x64\x53\x9b\xee\x15\xab\x0f\x86\x35\xe2\xbc\x79\xef\x8d\x7e\x70\x9e\x9e\x72\x5c\x32\x8e\xe0\xac\x91\xe6\x28\x9d\xe7\xe7\xc1\x45\x89\x9a\x42\xb6\xa6\x52\xa1\x9e\x3b\xb5\x5e\xba\x53\xe7\x72\x1f\x5e\x6b\x5d\xb9\xf8\x47\xcd\x36\x73\xe7\x77\xf7\x5f\x1f\xdc\x2b\x51\x56\x54\xb3\x45\x81\x0e\x64\x82\x6b\xe4\x7a\xee\x5c\x7f\x9c\x63\xbe\xc2\x97\x2c\x4e\x4b\x9c\x3b\x1b\x86\xdb\x4a\x48\xdd\x59\xb8\x65\xb9\x5e\xcf\x73\xdc\xb0\x0c\xdd\xe6\x84\x00\xe3\x4c\x33\x5a\xb8\x2a\xa3\x05\xce\x03\x03\xf2\x83\xeb\xc2\xcd\x1a\x81\x2e\xc4\x06\x21\x82\x06\x54\xd3\x95\x82\x77\x65\xad\xf4\x3b\xc8\x44\x89\xb0\x64\x52\x69\x60\x1c\xf4\x1a\xc1\xe8\x79\x0f\x94\xef\x40\xe8\x35\xca\xe6\xfc\x50\x17\x4c\x52\x9b\xf3\x8e\x2e\x35\xca\x77\x26\x45\x61\x0b\xe9\xba\xc7\xb4\x73\x54\x99\x64\x95\x66\x82\x77\x98\xff\x58\x08\x51\xaa\x87\x1d\x64\x05\x33\x90\x2b\x71\xa2\x96\xd6\x7a\x2d\x64\x27\xa3\xa2\x5a\xb2\xec\x81\x16\x8c\xff\x6d\x55\x52\x56\x78\x99\x28\x9d\xcb\xc1\xe0\x42\x33\x5d\xe0\xe5\x29\xe2\xcf\xe2\xc2\x6f\xaf\x0c\x5a\x07\x3e\x51\x8d\x2d\xef\x8a\x15\x98\x03\xe5\x39\x94\x8c\xb3\x25\xc3\x1c\xae\xbe\x7c\x69\x99\x17\x8c\x3f\x80\xc4\x62\xee\x28\xbd\x2b\x50\xad\x11\xb5\x03\x6b\x89\xcb\xb9\xe3\x2b\x4d\x35\xcb\xfc\x4c\x29\x7f\x21\x84\x56\x5a\xd2\xca\x2b\x19\xf7\x32\xa5\x1c\xc8\xa4\x50\x4a\x48\xb6\x62\x7c\xee\x50\x2e\xf8\xae\x14\xb5\x72\xbe\x02\x0a\x6f\xa2\xba\x7a\x8d\x25\x7e\x57\xec\x2d\x52\xd3\x4a\x97\x65\x82\xab\x17\xe4\xbf\x8c\xe0\x6e\x19\xcf\x3b\x30\x83\xc1\xe0\xa2\xed\x34\x28\x99\xbd\x26\xde\x2b\xff\xfe\x8f\x1a\xe5\xce\x8d\xbc\xd0\x0b\x9a\x8c\xfb\xaf\x2a\x02\xe7\xf2\xc2\x6f\x61\xbe\xa9\x6f\x7f\xa7\x1b\xfa\xa5\xad\xda\xb4\xef\x2b\x0c\x8e\xbb\x75\xaf\xe0\x1b\xeb\x37\x86\x5c\x0e\x00\x00\x16\x22\xdf\xc1\x53\xf3\xd7\x1c\x15\xcd\x73\xc6\x57\xae\x16\xd5\x0c\x92\x71\xf5\xf8\xbe\xb9\xf4\xdc\xfc\x36\x3f\x9e\xd2\x54\x6a\x94\xae\xc6\xb2\x2a\xa8\x46\x3b\x7b\x06\xf1\xb8\x7a\x84\x20\x39\xa4\x9b\x43\xe3\xa3\x76\x69\xc1\x56\x7c\x06\x19\x72\x8d\xd2\x82\x66\x4b\x49\xcb\x2e\xde\x42\xc8\x1c\xe5\x0c\xb8\xe0\x78\x58\x7d\xe1\xef\xd9\x0f\xba\xbd\xd1\xbb\x0a\xe7\x8e\xa9\xe1\xdf\xd3\x0d\x6d\xa3\x4e\x6b\x98\x79\x3b\xa9\x99\xef\x6f\xb7\x5b\x6f\xd5\x9a\x67\x1e\x32\xdf\xbc\xcc\xb4\xf2\x0b\x61\xde\x71\xa6\x79\xc7\x1e\xbd\x05\xdc\x7a\xb7\x12\x62\x55\xa0\xd7\xe2\x78\x06\x67\x34\xcc\x6a\x29\x91\xeb\x21\x39\xb2\x25\x7b\xa0\x2b\x54\x33\xb8\x1d\x66\x42\x62\x93\x30\x24\x30\x2c\x18\xc7\xe1\x5d\x2b\xec\xec\x7d\x0f\xa6\x42\xfd\x4f\xfe\x49\xd0\xfc\x8a\x16\xc5\x82\x66\x0f\xa3\x5c\xd2\xed\x0d\x96\x15\x4a\xaa\x6b\x89\xff\x47\xd6\x2f\x75\xc9\x72\xa6\x77\xbf\xa1\x34\xfe\xd3\x95\x49\x1e\x34\xe9\xcb\x9a\x67\xe6\x4d\x06\xfd\xeb\x46\x67\x1d\x31\xbe\x0f\x3f\xb5\x5f\x07\xf3\x42\x6d\x2a\x82\x16\xb0\xc0\x26\x99\x7b\x2f\x0b\x37\x54\x42\x4e\x35\x85\x39\x70\xdc\x1e\x28\x6e\x98\xaa\x69\xc1\xfe\x4b\x4d\x3d\xef\x27\xaa\xe9\x0d\x5d\x14\x38\x3a\x7b\xbd\x53\x4c\x92\x47\xf3\xfc\x4a\x14\x75\xc9\x47\x43\xa5\x25\xe3\x2b\xe3\xd7\xc7\x02\x4b\x63\xee\x1b\x8b\x79\x5d\x2e\x50\x9a\xc5\xaf\xfc\xfb\xd6\x7f\x16\x5b\x35\xba\x7d\x09\x9b\xe3\x76\x78\x90\x3e\x24\x30\x99\xde\x91\x93\xab\xff\x19\x12\x08\x83\x4e\xf8\xce\x18\xd8\xf1\xe5\x9a\x2b\x4d\xb9\x66\xe6\xa1\x30\x8f\xb3\x31\xe4\xd5\xa5\x63\x67\x9a\x50\x53\x6f\xf7\x96\x41\xbf\x31\xbc\x32\x2b\x47\xb9\xc8\x6a\xa3\xdd\x5b\xa1\xde\xdb\xf0\xe3\xee\x3a\x1f\x0d\xd7\x7b\xce\xcd\xb2\xe1\x59\x47\x6a\xa7\x84\x67\xa8\x8c\x8c\x76\x02\xbc\x2e\x8a\xb3\xc3\xd3\x64\xb7\xbf\x73\x73\x35\x7d\xff\xfe\xfd\x7c\x6d\xd1\xef\xdf\xd6\xc9\x0e\xa5\x61\xd7\xf2\xb7\x7a\x39\x26\x30\x3e\xed\x60\x40\x20\xb0\x82\x21\x81\x30\x3a\x0d\x46\x04\x82\xc9\x69\x30\x26\x10\x58\x77\x45\x42\xe0\xfc\x34\x96\x12\x08\x82\xd3\xe0\x84\x40\x68\x41\x4e\x09\x44\x56\xf1\x73\x02\xb1\xcd\x7d\x4c\x20\x0a\xad\x68\x40\x20\x4a\xac\x68\x48\x20\xb2\x11\xa2\x5e\xdc\x98\x40\x6c\xe3\x26\x04\x62\x8b\x6d\x90\x12\x88\x63\x2b\x3a\x21\x10\x5b\xbe\x04\x53\x02\x89\x8d\x7b\x4e\x20\xb1\x10\xc2\x71\x1f\x87\x30\x20\x90\x58\xda\xc2\x90\x40\x92\x5a\xd1\x88\x40\x62\xf1\x0d\x63\x02\xa9\xdd\xf0\x84\x40\x62\x47\xd3\x3e\xbe\xe1\x84\x40\x62\xb5\x32\x9c\x12\x88\xad\xae\x87\x46\x9b\x7d\x27\x8d\xfb\x54\x44\x41\x1f\xb3\x28\x24\x90\x5a\xd5\x22\xa3\xcd\xaa\x16\x19\x6d\x16\xdf\x28\x21\x90\xda\xd5\xd2\xde\xb5\x46\x9b\xd5\xb7\x68\xda\xcb\xf7\xbc\x8f\x59\x3c\x26\x90\x5a\xdd\x8c\x83\x3e\x0e\xb1\xd1\x66\xb9\x13\x47\x04\x52\xab\x9b\xb1\xd1\x66\x3f\x7e\x46\x9b\xe5\x43\x9c\xf6\x46\x27\x04\x26\x96\xbf\xf1\x94\xc0\xc4\xf2\x21\x36\xda\xec\xe7\x7a\xdc\xc7\x2c\xe9\xd5\x96\x84\x7d\x7c\x93\xa8\x8f\x43\x12\x13\x98\x58\x4e\x26\x49\x1f\xb3\x24\x25\x30\xb1\x3c\x4b\x8c\x36\x9b\xc3\xb4\xb7\x5a\xaf\xb6\xb4\xb7\x6f\x69\xef\x3d\x99\x86\x7d\x8a\xd3\xa8\x4f\x71\x1a\xf7\x56\xeb\xed\x5b\x9a\xf6\xf1\x4d\x27\x7d\x3e\xa4\xd3\x3e\xc5\xe9\x39\x81\xe9\xf8\xae\xff\x6b\x6c\x3e\x56\xa2\x99\xce\x14\xcc\x3b\xbb\x17\x73\xac\x3f\x3c\x32\x35\x3b\x09\x9a\xa3\x99\xab\x66\x30\xbc\x61\x25\x0e\x8f\xae\x3e\x1f\xd7\xde\xfc\x29\x42\xe7\x8b\x75\x0c\xf4\x72\xf6\x7c\xc2\xb6\xf9\x5a\x9b\xbc\xb7\xbe\xaf\x9f\x18\xff\xb3\xfd\x80\x7e\x2d\xfd\xba\x25\x38\xde\x13\x98\x2a\xdd\x1d\xc1\xde\xa8\xb3\xce\x16\xfb\xb0\x0d\xde\x0f\x2b\xbf\xdc\xfc\xe3\x53\x02\x6a\xcd\xca\x66\x63\xf3\x19\x55\x25\x78\x6e\x26\x8e\xa5\x90\x70\xfd\x71\x0a\xaa\xae\xcc\x14\x0f\x62\xb9\x5f\x8c\x2d\x29\xd5\x0e\x36\x98\x33\x0a\x66\x5e\x62\xb8\x9f\xa5\x0d\xec\xbf\x3f\x7c\xfe\xf5\xfa\xd7\x9f\x67\x5d\xc0\x5c\xa0\xe2\x43\x0d\x5b\x21\x1f\x80\x2d\x61\x27\x6a\xd8\x30\x6c\x37\x52\x15\x5d\x21\x6c\x18\x85\x25\x2b\x70\xe6\xfb\x2f\x50\xb7\x6c\x09\x85\x86\xeb\x8f\x70\x7e\x77\xb9\x57\x7b\x34\x35\x1d\x86\x00\xa1\x94\x57\xd2\xc7\x2c\xe7\xcd\x0c\xb0\xd6\x65\x91\xa8\x35\xdb\xf8\x91\x37\xf1\xa2\xd7\xf3\x97\x89\xaa\x33\x14\x7c\x3b\xac\x6c\xf5\xf8\x81\x17\x7b\xe1\xe1\xec\x6b\x90\x17\x3f\xdc\x22\xcf\xd9\xf2\xce\x88\x79\x7a\x02\xe4\x39\x3c\x3f\xff\x2f\x00\x00\xff\xff\x1d\x00\x56\x26\x85\x11\x00\x00")

func tmplGraph_headerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplGraph_headerHtml,
		"tmpl/graph_header.html",
	)
}

func tmplGraph_headerHtml() (*asset, error) {
	bytes, err := tmplGraph_headerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/graph_header.html", size: 4485, mode: os.FileMode(420), modTime: time.Unix(1498830823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplLog_bodyHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\xcd\x6e\x9c\x30\x10\xbe\xef\x53\x4c\x9c\xb3\xb1\xda\xde\x2a\xe0\x10\x55\x6a\x55\xe5\x50\xa9\xb9\x57\xb3\xb6\x17\x9c\x78\x3d\xd4\x9e\x45\x59\xa1\x7d\xf7\x0a\x03\x9b\x0d\x4d\x52\x55\x95\x7a\x40\xe0\xe1\xfb\x63\x66\xc4\x30\x18\xbb\x73\xc1\x82\xd0\x14\xd8\x06\x16\xa7\xd3\x66\x53\x06\xec\x41\x7b\x4c\xa9\x12\x01\xfb\x2d\x46\x98\x6e\xd2\x85\xde\xc6\x64\x97\xe3\xce\x3d\x5a\x23\x99\x3a\x51\x6f\x00\x00\x4a\xe3\xce\xc4\x51\x10\x5d\xb0\x71\x7e\xb7\x7e\x3f\x4b\xb4\x16\xcd\x33\x4c\xc6\x6d\x0f\xcc\x14\x80\x8f\x9d\xad\xc4\x74\x10\x2b\x22\x53\xd3\x78\x0b\x9a\xbc\xc7\x2e\x59\x23\xc0\x20\xe3\x5c\x1e\xed\xa7\xfa\x52\xc6\xd8\x58\xae\xc4\xf5\xc4\x16\x80\xd1\xa1\xb4\x8f\x1d\x06\x63\x4d\x25\x76\xe8\x47\x6c\xae\x8e\xc9\x23\xf9\xb3\xd5\x3a\x5c\xea\x30\x2c\x61\x52\x94\x14\xfc\x51\xd4\x77\x53\x9c\x80\xbd\x6b\x90\x1d\x85\x52\x8d\xb8\x37\xa8\x4e\x53\x90\x59\xfe\x7f\x41\x4b\x35\xb5\x72\x45\xc7\x55\x67\xb7\x11\x83\x11\xd0\x46\xbb\xab\xc4\xb5\xa8\x6f\x3c\xd1\x3e\x3d\x1c\x4b\x85\x17\xa3\x54\xc6\xf5\xab\xc9\x3a\x73\x6e\xd9\xd3\x16\x4c\x63\x58\x36\xe6\x3c\x96\x55\x86\x83\xbf\x08\xb1\x80\x03\xf6\x2b\x5c\xc6\x7a\x57\x97\x38\xc7\x53\xa2\x1e\x86\x3b\x10\x5f\x68\x6f\xc5\xe9\x34\x46\x2c\x95\x77\x2f\xb2\x16\x07\xd4\xec\xfa\x75\x82\x8b\x6e\xcc\xca\x9e\x1a\x51\xdf\x52\xf3\xa6\x66\x7d\x41\x68\x22\x76\xed\x92\xc7\x25\xa6\x78\xfc\x53\xa4\xa7\x0f\x69\x99\xbb\xf4\x51\xa9\xc6\x71\x7b\xd8\x16\x9a\xf6\xaa\x43\x8e\x4e\x3f\xa0\x77\x41\x6d\xe7\x19\x48\xed\x9d\x0d\x2c\x1b\x12\xb0\xec\xf4\x8f\xad\xc7\xf0\x20\xea\xcf\x99\xfa\x97\x7e\x06\x53\xbb\x25\x8c\xa6\x58\x2c\xb2\xf7\xef\xea\xcb\x16\xc0\xa7\x85\xf1\xe4\xf4\x7c\x96\xea\xe0\x5f\xdc\x93\xf9\xb1\x54\x01\xc7\xdb\x95\x94\xaa\x08\xd8\x9f\x77\x02\xa4\xac\x37\x9b\xd7\xfe\x21\x59\x62\x18\x8a\x5b\x6a\xee\x1e\x39\xff\xa6\x66\xbd\x2b\x29\x41\x15\x67\xec\x2c\x33\x56\x6f\x88\x38\x71\xc4\x0e\x34\x45\x0b\x5f\xb1\xc7\xef\x3a\xba\x8e\x5f\x1c\x7d\x55\x55\xaf\xd5\xff\xe1\xca\x71\x72\x9a\x6f\x1e\xb5\x35\x80\x0c\xdc\x5a\xb0\xc1\x00\xed\xf2\xa3\x21\x7d\xd8\xdb\xc0\x90\x28\x9f\x3b\x6c\x6c\x02\x4f\x68\x60\x87\x89\xe7\x4f\x2a\x53\x8e\x0e\x29\xea\x4a\xa8\xc4\xc8\x4e\xab\xfb\xa4\xee\x7f\x1e\x6c\x3c\xca\x0f\xc5\xfb\xe2\x5d\xb1\x77\xa1\xb8\x4f\x62\xec\xf2\x04\xaf\x37\xc3\x90\xbd\x4e\xa7\x5f\x01\x00\x00\xff\xff\x4e\xf3\x17\x5e\xed\x05\x00\x00")

func tmplLog_bodyHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplLog_bodyHtml,
		"tmpl/log_body.html",
	)
}

func tmplLog_bodyHtml() (*asset, error) {
	bytes, err := tmplLog_bodyHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/log_body.html", size: 1517, mode: os.FileMode(420), modTime: time.Unix(1498831018, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplLog_headerHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\xdf\x6f\xdb\x36\x10\xc7\xdf\xfd\x57\x5c\xf5\x32\x20\x18\xa5\xa6\x69\xb0\xce\xb5\x8c\x75\x45\xd0\x65\xe8\xfa\xd0\x74\xd8\x80\xa2\x0f\x34\x79\xb2\x2e\xe1\x0f\x95\x77\xb2\x63\x18\xfe\xdf\x07\x4a\x4e\xea\x34\xf0\x10\x0c\xe3\x03\xe1\x33\xf9\xfd\xf0\xee\xbe\xd0\x6d\xb7\x16\x1b\x0a\x08\x45\x8b\xda\x62\x2a\x76\xbb\xc9\xcc\xa3\x68\x30\xad\x4e\x8c\x52\x17\xbd\x34\xea\x55\x31\xdf\xff\xdd\x8a\x74\x0a\xbf\xf6\xb4\xaa\x8b\xbf\xd5\x9f\x6f\xd4\xdb\xe8\x3b\x2d\xb4\x70\x58\x80\x89\x41\x30\x48\x5d\x5c\x5e\xd4\x68\x97\x78\xaf\x0a\xda\x63\x5d\xac\x08\xd7\x5d\x4c\x72\x70\x71\x4d\x56\xda\xda\xe2\x8a\x0c\xaa\x21\xf8\x11\x28\x90\x90\x76\x8a\x8d\x76\x58\x9f\x66\xc8\x33\xa5\xe0\x53\x8b\xa0\x17\x71\x85\x70\x06\x03\x54\xf4\x92\xe1\xc4\xf7\x2c\x27\x60\xa2\x47\x68\x28\xb1\x00\x05\x90\x16\x21\xd7\xf3\x1a\x74\xd8\x40\x94\x16\xd3\x10\xdf\xbd\x0b\x59\x34\x6a\x4e\x74\x23\x98\x4e\xb2\x84\x71\x44\x2a\xf5\x30\x6d\x8b\x6c\x12\x75\x42\x31\x1c\x64\xfe\xab\x8b\xd1\xf3\xcd\x06\x8c\xa3\x8c\x5c\xc6\xef\xaa\xd5\xbd\xb4\x31\x1d\x28\x3a\x2d\x89\xcc\x8d\x76\x14\x7e\x59\x7a\x4d\xae\x34\xd1\x17\xf3\xc9\x64\x26\x24\x0e\xe7\xdf\x13\xdf\xc5\x59\x35\x9e\x4c\xc6\x0e\xbc\xd7\x82\x63\xde\x1d\x39\xb4\xa0\x83\x05\x4f\x81\x1a\x42\x0b\x6f\xaf\xae\xc6\xcc\x1d\x85\x1b\x48\xe8\xea\x82\x65\xe3\x90\x5b\x44\x29\xa0\x4d\xd8\xd4\x45\xc5\xa2\x85\x4c\x65\x98\xab\x45\x8c\xc2\x92\x74\x57\x7a\x0a\xa5\x61\x2e\xc0\xa4\xc8\x1c\x13\x2d\x29\xd4\x85\x0e\x31\x6c\x7c\xec\xb9\x38\x02\x85\x7f\xa5\x2a\x69\xd1\xe3\xff\xca\x5e\xa3\xce\x56\x2a\x32\x31\xf0\x3d\xf9\x3f\x13\xd4\x9a\x82\x3d\xc0\x4c\x26\x93\xd9\xe8\x34\x70\x32\xdf\x84\xd7\x5c\x5d\x7f\xed\x31\x6d\xd4\x59\xf9\xa2\x3c\x1d\x14\xd7\x47\x2b\x82\x62\x3e\xab\x46\xcc\x93\x7c\xfb\x5d\xaf\xf4\xd5\xf8\xea\x60\xdf\x91\x0c\x1e\xba\x75\xcd\xf0\xc4\xf7\x87\x86\xcc\x27\x00\x00\x8b\x68\x37\xb0\x1d\x7e\xe6\xd5\x69\x6b\x29\x2c\x95\xc4\x6e\x0a\xe7\xcf\xbb\xdb\xd7\xc3\xd1\x6e\xd8\x87\xad\x64\xd1\x49\x30\x29\x41\xdf\x39\x2d\xf8\x58\x3d\x85\x97\xcf\xbb\x5b\x38\x3d\xbf\x93\xe7\x25\x78\x2b\x4a\x3b\x5a\x86\x29\x18\x0c\x82\xe9\x11\x9a\x9a\xa4\xfd\x21\x6f\x11\x93\xc5\x34\x85\x10\x03\xde\xdd\x9e\x55\xfb\xec\xf7\x7d\xfc\xed\xd3\x1f\xef\xcf\x81\x5b\xf2\x43\x0b\x3f\x22\x77\x31\xd8\xdc\x8c\x26\x26\xb8\xbc\x78\x05\xdc\x77\x79\xc0\x40\x6c\xf6\x97\xd1\xa1\xc7\x20\x3c\xf6\x1c\x2d\x69\xc8\x56\x12\xee\x3f\xf3\x8c\xfd\xeb\xcd\xc7\x0f\x97\x1f\xde\x4d\x0f\x81\x36\x22\x87\x1f\x04\xd6\x31\xdd\x00\x35\xb0\x89\x3d\xe4\xf1\x35\x8c\x96\x4e\x2f\x11\x56\xa4\xa1\x21\x87\xd3\xaa\xba\x47\x7d\xa6\x06\x9c\xc0\xe5\x05\xfc\xfc\x65\xbe\x2f\xed\x81\xa1\x79\x7a\xf2\xb4\xaa\x22\x73\xe9\xf5\xad\xb1\x21\xcf\x80\xaa\x15\xef\xce\xb9\xa5\x55\x75\x56\xfe\x54\x9e\x7d\x8b\xef\xcd\x3e\xf0\xf4\xe9\xd8\x34\xd6\x53\x9d\x96\x2f\xcb\x17\x77\xd1\x31\xe4\xec\xd9\x67\x0c\x96\x9a\x2f\xb9\x98\xed\x16\x30\x58\xd8\xed\xfe\x09\x00\x00\xff\xff\xc5\x87\x89\x23\x20\x06\x00\x00")

func tmplLog_headerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplLog_headerHtml,
		"tmpl/log_header.html",
	)
}

func tmplLog_headerHtml() (*asset, error) {
	bytes, err := tmplLog_headerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/log_header.html", size: 1568, mode: os.FileMode(420), modTime: time.Unix(1498743877, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _langEnUsAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\x3d\x6e\xc3\x30\x0c\x85\xf7\x9c\x82\xf0\x1c\xe4\x00\x59\xb3\xb4\x5b\x87\x2e\x9d\x04\xa2\x62\x2d\x01\xfa\x09\x28\xba\x85\x60\xe8\xee\x85\x1c\xa7\x71\x2b\xa3\x31\xb2\x19\xf6\xf7\x3e\x92\x7e\xe3\x0e\xa0\x3b\x59\xc9\xdd\x11\xea\x33\x40\x17\xc5\x10\x77\xc7\xf9\xf5\x0e\xa0\xec\xa1\x52\x5a\x69\xcc\x69\xc1\x05\xaa\xd4\x38\x1e\x4e\x71\x08\x52\x0a\x68\xcc\xdd\xfe\x8f\xe4\xf7\xe7\x74\xf1\x55\x9d\xcf\xca\x90\xed\x8d\x28\x1b\x94\x27\x21\x6e\xdd\xcf\x80\x1e\x16\x86\x09\x03\x41\xe7\x0e\xcd\xa0\x55\x36\xcd\xf0\xcf\xd4\x33\x71\x8a\x41\xf5\x4c\x24\x36\xf4\x2b\x57\x3f\x91\x73\xb1\x8a\x5e\x26\xb4\x94\x26\x3c\x04\x26\xd4\x8a\x3c\x5a\xa7\xde\xeb\xb8\xb5\x9f\x72\x8d\x83\xc1\xb4\xdc\xeb\x92\x86\x29\xdd\x5e\xb1\x31\x98\xda\x93\xda\xad\x94\x58\x4f\x1f\x8c\x9e\x1e\xdd\x0f\x6c\x00\x31\x04\x67\x4c\x52\x99\xd7\xab\xb0\x94\xc7\x57\xff\x57\x7a\xbb\x8a\x63\xcf\xe8\xef\x37\xf5\x15\xd9\xe9\x5b\x2e\xc7\x81\xb7\x34\xf4\x16\x07\x30\xf8\x49\xdb\xab\xb9\x97\x98\x3b\xd9\x95\xef\x00\x00\x00\xff\xff\xa2\x16\x10\xd2\x54\x03\x00\x00")

func langEnUsAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_langEnUsAllJson,
		"lang/en-us.all.json",
	)
}

func langEnUsAllJson() (*asset, error) {
	bytes, err := langEnUsAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lang/en-us.all.json", size: 852, mode: os.FileMode(420), modTime: time.Unix(1498741549, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _langFrAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x96\xcf\x6e\xdb\x48\x0c\xc6\xef\x7d\x0a\xc2\x97\x5e\x8a\x3c\xc0\xde\xda\x78\x53\x27\xd8\xda\x41\x9c\x4d\xd1\x93\x31\x91\x68\x8b\xbb\xf3\x47\x3b\x33\x74\x2a\x18\x7a\x9f\xf5\x73\xf8\xc5\x16\x23\x27\x69\x67\x2c\x06\x2e\xf6\x68\xf3\xf7\x7d\x22\x87\x1c\x4a\xbb\x77\x00\x00\x93\x8f\xad\x9f\xfc\x06\xc7\x1f\xc3\x1f\x2e\x36\x98\xfe\x9a\x7c\xdc\x7a\xd2\x93\x21\xd0\x7f\x78\x86\x79\x23\xc1\x8e\x63\xce\x7e\xd2\xce\x99\xf0\x77\x07\x95\x26\xb4\x11\xc8\xc2\x67\x27\xa8\x2f\x8f\xc8\xab\x04\x07\x36\xb3\xbb\xa4\xd8\x09\xea\x07\xd2\x1a\x73\x7a\xaa\x24\xf8\xc6\xb1\x2f\x58\xac\x04\x76\x7a\xd8\x57\x68\x1e\x7d\x69\x8e\x5b\xaa\x10\xae\x6b\x49\x46\xa1\x75\x81\x22\xad\xe1\x7a\x9a\x4b\x7f\x0f\x51\x10\xa5\x48\x86\x5e\xe1\xa3\x80\x5e\x1d\xf6\x5b\x4f\x58\x94\x31\x73\x06\xa5\xe6\x54\x15\x63\xd9\xcb\x19\x85\xe8\xbc\x74\x4c\xc7\x28\xfd\xc3\x45\xed\x33\x36\x54\xcb\xad\x78\x0e\x1f\xf6\xb9\xea\xda\xd6\xf8\x1d\xfe\x7c\x10\x54\xaf\xe1\x4c\x74\xa3\xac\xd4\x43\x65\xb7\x27\xf5\xdf\xb0\x96\x70\x4e\x03\x12\x4b\x5c\x74\x67\xb2\x39\xfb\x87\x0a\x11\x96\x9d\x15\xe7\x04\xbd\xa5\xc3\xbf\x1e\x21\x74\xb6\x6a\xbc\xb3\x14\x54\x24\x57\xd8\x7c\x51\xd2\x55\xfb\xa2\x7c\x28\x59\xe9\x88\x8d\xa2\x1c\x9d\xd3\xa6\x91\xa6\x6a\xce\x54\xd4\x3d\x97\xee\xe0\xbc\x4c\x77\xee\x7c\x6c\x44\xd8\xd7\x25\xbd\x15\xd9\xed\xc8\x25\x9a\xb3\x79\x44\x0f\x8b\x35\x5c\x39\xad\xdd\x13\xfa\x20\xea\x93\x1a\x6a\x84\xf5\x2b\x99\x59\x2d\x2a\xa9\xfc\x45\x15\xdd\xc9\x93\x6f\x3d\x86\xc0\x5e\xba\x2c\x43\x98\x9c\x05\x15\x8d\x0b\x6d\x73\xd8\x8f\x5c\x83\x3b\x45\xd2\xf8\xdc\x6a\xa6\x11\x1a\xa6\x8a\xb4\xd4\xd3\x41\x03\xaa\xaa\xd8\xb0\x3e\xec\xa1\x7e\xaf\xf8\x2f\xc7\xbe\x7e\xdf\x30\x8d\x78\xdd\xa9\x28\xa5\x7f\xaf\xf8\x7b\x3a\xab\x56\x48\x23\x49\x61\x18\xe8\x26\x6d\xc2\xb7\xf2\xa9\x30\xc6\x74\xee\x2f\xc3\xdd\x20\x97\x67\xb9\xc4\x56\xb0\x58\x62\x1b\x47\xda\xbe\x74\x2c\x0e\xd5\x92\x8b\x99\x5a\x72\x88\x8a\x2c\xd6\xf0\x95\xac\xb4\x6d\x1f\x28\x62\x08\x08\x35\xc3\x36\xbd\x44\x82\xe3\x88\x96\x73\xa7\x7b\x34\x2d\x7a\x15\xe5\xb6\x27\xe2\xb0\x7f\x46\x72\x2d\x19\x0c\x51\x19\xa9\xd2\x1f\xf1\x4c\xf6\x75\x4a\x1e\xab\x61\x0b\x8c\xeb\x52\x4d\xf0\x03\xca\xc5\x28\xbe\x28\x16\x8c\xe5\xab\xa2\x70\x92\xde\x4a\xcf\xf1\x97\x93\x1a\xf1\xf8\xcc\xe2\x63\xef\xd4\x5a\xe9\xe1\x16\x9e\x6a\xbf\xa1\x74\x77\x17\xe5\xf8\xd6\xab\x5a\x75\x25\x6d\x53\x53\x26\xbb\xdd\xc5\xa5\x63\x1b\xfb\x1e\x6a\xd5\x4d\x3e\x8c\xd8\xe5\x48\xb1\x06\x1a\xda\x48\x93\x35\x53\xe5\xd7\x89\x76\x4f\x02\xfb\x49\x15\xbe\x06\x6b\x62\x23\x6d\x6e\xd7\x61\xd1\x3b\xd3\xad\x1a\x4c\x3b\x79\x45\x76\x65\x30\x9e\x6e\xb6\x63\xbd\xd7\xa0\x0c\xfc\x54\xd1\x11\x85\xa8\xb4\xbe\x18\xad\xfe\x4d\x41\x96\x42\x8b\x3e\x38\xbb\xda\x78\xc4\x48\x56\xfa\x66\x9b\xa1\xd6\x2e\x19\xde\x0e\x78\xdf\x8f\x9a\xb0\xf5\xa8\xea\x15\x1a\x45\x7a\x55\xa5\x47\x4b\xdd\x7b\xb1\x81\x46\x85\x9f\xf3\x3c\x3a\xc0\xe0\x10\xc6\x4b\x3b\x5f\x7d\x5e\x8a\xab\x48\x06\xd7\x5e\x9d\x7c\x12\xfd\x5a\xb2\xe9\xa3\x35\x36\x08\x6d\xda\x97\xbb\xdd\xc5\xfd\x8b\x6b\xdf\xff\xbf\x3a\xde\x34\xce\x4b\xf4\x6e\xe3\x95\x39\xaf\x97\x4f\xce\xeb\x62\x87\x76\x8e\xfd\xb9\x3d\xfc\xe6\x18\x1a\xb5\xc5\x5f\x6c\xde\x19\xb2\x63\x4a\xef\xfa\xff\x02\x00\x00\xff\xff\xcd\x16\x5d\x64\x75\x0c\x00\x00")

func langFrAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_langFrAllJson,
		"lang/fr.all.json",
	)
}

func langFrAllJson() (*asset, error) {
	bytes, err := langFrAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lang/fr.all.json", size: 3189, mode: os.FileMode(420), modTime: time.Unix(1498831058, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testConfigfortestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x41\x6b\xe3\x3c\x10\xbd\xfb\x57\x3c\x9c\x43\xfb\x41\xd2\x34\x50\x4a\xf1\xe1\x83\x2e\xdd\xc3\x42\x59\x42\x37\xfd\x01\x63\x69\x1c\x8b\xc8\x1a\x23\x8d\xd3\xfa\xdf\x2f\x4a\xea\x34\xa5\x39\xac\x4e\xd2\x3c\xbd\x37\x33\x6f\x66\xb1\x58\x14\x33\x78\x0a\xdb\x81\xb6\x8c\x6b\x0e\x8b\x21\xcd\xd1\xc4\xff\x0a\x7c\x86\x2b\x1c\xe2\xc5\xec\xe3\x60\x4d\x91\xba\x84\x46\x22\x6a\x2f\xd2\xa5\xdd\x58\xcc\xf0\x5b\x62\x47\xde\x8f\xb0\x12\xae\x14\xa6\xa5\xb0\xe5\x02\xa7\x2f\xaf\x2f\xcf\x15\xca\x56\xb5\x4f\xd5\x72\x49\xbd\xbb\x99\x90\x1b\x23\x5d\x0e\x2c\xd3\x6e\xb4\xa4\xb4\x2c\x8b\x19\xb4\x65\xec\x78\x9c\xc3\xe9\x55\x42\x13\x39\x17\x32\xb1\x2d\xa5\xb6\x16\x8a\xf6\xab\xc6\x59\xb6\x47\x63\x38\xa5\x8d\xec\x38\x54\x28\x47\x19\xa2\xe6\x7b\xf9\xd9\xc5\x0b\x37\x91\x53\x0b\x75\x1d\xcf\x51\x33\x82\x28\x54\x90\x72\x17\xa8\xd9\xd0\x90\x18\xa3\x0c\xa0\xc8\x59\xd7\xec\xd8\xa2\x1e\x21\x3d\x87\x37\x26\x6d\x39\x82\x82\x3d\xa5\xc4\xb5\x0b\x48\x6c\x24\xd8\xec\x5f\x3c\xea\x6f\x5c\xc7\xb1\x42\x79\x7f\x7b\x96\xfb\x57\x03\x8d\x03\xc3\xba\xd4\x7b\x1a\xe1\x42\x93\xdd\x53\x27\x21\x41\x02\x8c\x84\x24\x3e\xbb\xf7\x71\x7b\x34\xea\xf6\xa4\x6c\x2b\x94\x99\x59\x16\xc0\xbf\xcb\xbd\x71\xdd\xd3\x61\x18\xed\x66\xb3\xbe\xa4\x95\xe3\x6b\x89\x8a\x0a\x65\xb5\x5a\xad\x56\xe5\xb7\x71\xbb\xd0\xf8\xe1\xfd\xe9\x07\x02\x67\x6b\x29\x8e\x70\xc7\xbc\x05\x4e\xe0\x25\xed\x09\xfb\xc3\x71\x7f\xb0\xc2\x8b\x21\xdf\x4a\xd2\xef\x68\xae\xa1\x42\xf9\x70\xfb\x70\x7f\x0e\xbe\x26\x8e\x81\x3a\xae\x50\x46\x91\x2f\xbc\x35\xa5\xf4\x26\xd1\x5e\x80\x9e\x48\xa9\xa6\x94\x59\xd3\x8c\xce\xda\xfa\xf9\xde\x73\xd4\x62\x86\xd5\xc1\x2f\x60\xf1\x3f\xee\xa0\x91\x4c\x6e\xc8\xcb\xf6\x99\xf7\xec\x2b\xdc\xe5\x65\x14\xe4\x65\xc8\x3b\x69\xc4\x32\x5c\x80\x34\x8d\x77\x81\xd1\xe5\x77\x3f\x28\x3a\x31\xbb\x6a\xf2\xe3\xf8\x68\xc8\x27\x2e\x66\x47\x2e\x77\xbd\x27\xe5\x39\x92\x92\x3a\x83\xc6\xf9\x83\x50\x23\xde\x72\x3c\x6c\x9f\x0b\xa8\x87\x60\x3d\xdb\x02\xb0\xbc\x3f\x29\x4c\xa7\xf8\x1b\x00\x00\xff\xff\x1e\x93\x09\x2a\xb2\x03\x00\x00")

func testConfigfortestYamlBytes() ([]byte, error) {
	return bindataRead(
		_testConfigfortestYaml,
		"test/configForTest.yaml",
	)
}

func testConfigfortestYaml() (*asset, error) {
	bytes, err := testConfigfortestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/configForTest.yaml", size: 946, mode: os.FileMode(420), modTime: time.Unix(1498741549, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"tmpl/bloomsky.html": tmplBloomskyHtml,
	"tmpl/bloomsky.txt": tmplBloomskyTxt,
	"tmpl/bloomsky_body.html": tmplBloomsky_bodyHtml,
	"tmpl/bloomsky_header.html": tmplBloomsky_headerHtml,
	"tmpl/graph_body.html": tmplGraph_bodyHtml,
	"tmpl/graph_header.html": tmplGraph_headerHtml,
	"tmpl/log_body.html": tmplLog_bodyHtml,
	"tmpl/log_header.html": tmplLog_headerHtml,
	"lang/en-us.all.json": langEnUsAllJson,
	"lang/fr.all.json": langFrAllJson,
	"test/configForTest.yaml": testConfigfortestYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"lang": &bintree{nil, map[string]*bintree{
		"en-us.all.json": &bintree{langEnUsAllJson, map[string]*bintree{}},
		"fr.all.json": &bintree{langFrAllJson, map[string]*bintree{}},
	}},
	"test": &bintree{nil, map[string]*bintree{
		"configForTest.yaml": &bintree{testConfigfortestYaml, map[string]*bintree{}},
	}},
	"tmpl": &bintree{nil, map[string]*bintree{
		"bloomsky.html": &bintree{tmplBloomskyHtml, map[string]*bintree{}},
		"bloomsky.txt": &bintree{tmplBloomskyTxt, map[string]*bintree{}},
		"bloomsky_body.html": &bintree{tmplBloomsky_bodyHtml, map[string]*bintree{}},
		"bloomsky_header.html": &bintree{tmplBloomsky_headerHtml, map[string]*bintree{}},
		"graph_body.html": &bintree{tmplGraph_bodyHtml, map[string]*bintree{}},
		"graph_header.html": &bintree{tmplGraph_headerHtml, map[string]*bintree{}},
		"log_body.html": &bintree{tmplLog_bodyHtml, map[string]*bintree{}},
		"log_header.html": &bintree{tmplLog_headerHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

